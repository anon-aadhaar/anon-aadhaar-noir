{ "noir_version": "0.38.0+e784523a15c0c233a5a794f28498635b7ce86325", "hash": 16964198439037719030, "abi": { "parameters": [{ "name": "qrDataPadded", "type": { "kind": "struct", "path": "std::collections::bounded_vec::BoundedVec", "fields": [{ "name": "storage", "type": { "kind": "array", "length": 1100, "type": { "kind": "integer", "sign": "unsigned", "width": 8 } } }, { "name": "len", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] }, "visibility": "private" }, { "name": "qrDataPaddedLength", "type": { "kind": "integer", "sign": "unsigned", "width": 32 }, "visibility": "private" }, { "name": "delimiterIndices", "type": { "kind": "array", "length": 18, "type": { "kind": "integer", "sign": "unsigned", "width": 8 } }, "visibility": "private" }, { "name": "signature_limbs", "type": { "kind": "array", "length": 18, "type": { "kind": "field" } }, "visibility": "private" }, { "name": "modulus_limbs", "type": { "kind": "array", "length": 18, "type": { "kind": "field" } }, "visibility": "private" }, { "name": "redc_limbs", "type": { "kind": "array", "length": 18, "type": { "kind": "field" } }, "visibility": "private" }, { "name": "revealAgeAbove18", "type": { "kind": "boolean" }, "visibility": "private" }, { "name": "revealGender", "type": { "kind": "boolean" }, "visibility": "private" }, { "name": "revealPinCode", "type": { "kind": "boolean" }, "visibility": "private" }, { "name": "revealState", "type": { "kind": "boolean" }, "visibility": "private" }, { "name": "nullifierSeed", "type": { "kind": "field" }, "visibility": "private" }, { "name": "signalHash", "type": { "kind": "field" }, "visibility": "private" }], "return_type": { "abi_type": { "kind": "struct", "path": "RevealedData", "fields": [{ "name": "age", "type": { "kind": "boolean" } }, { "name": "gender", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }, { "name": "pincode", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }, { "name": "state", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "field" } }, { "name": "nullifier", "type": { "kind": "field" } }, { "name": "pubkey_hash", "type": { "kind": "field" } }] }, "visibility": "public" }, "error_types": {} }, "bytecode": "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", "debug_symbols": "", "file_map": { "6": { "source": "use crate::meta::derive_via;\n\n#[derive_via(derive_eq)]\n// docs:start:eq-trait\npub trait Eq {\n    fn eq(self, other: Self) -> bool;\n}\n// docs:end:eq-trait\n\n// docs:start:derive_eq\ncomptime fn derive_eq(s: StructDefinition) -> Quoted {\n    let signature = quote { fn eq(_self: Self, _other: Self) -> bool };\n    let for_each_field = |name| quote { (_self.$name == _other.$name) };\n    let body = |fields| {\n        if s.fields().len() == 0 {\n            quote { true }\n        } else {\n            fields\n        }\n    };\n    crate::meta::make_trait_impl(\n        s,\n        quote { Eq },\n        signature,\n        for_each_field,\n        quote { & },\n        body,\n    )\n}\n// docs:end:derive_eq\n\nimpl Eq for Field {\n    fn eq(self, other: Field) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for u64 {\n    fn eq(self, other: u64) -> bool {\n        self == other\n    }\n}\nimpl Eq for u32 {\n    fn eq(self, other: u32) -> bool {\n        self == other\n    }\n}\nimpl Eq for u16 {\n    fn eq(self, other: u16) -> bool {\n        self == other\n    }\n}\nimpl Eq for u8 {\n    fn eq(self, other: u8) -> bool {\n        self == other\n    }\n}\nimpl Eq for u1 {\n    fn eq(self, other: u1) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for i8 {\n    fn eq(self, other: i8) -> bool {\n        self == other\n    }\n}\nimpl Eq for i16 {\n    fn eq(self, other: i16) -> bool {\n        self == other\n    }\n}\nimpl Eq for i32 {\n    fn eq(self, other: i32) -> bool {\n        self == other\n    }\n}\nimpl Eq for i64 {\n    fn eq(self, other: i64) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for () {\n    fn eq(_self: Self, _other: ()) -> bool {\n        true\n    }\n}\nimpl Eq for bool {\n    fn eq(self, other: bool) -> bool {\n        self == other\n    }\n}\n\nimpl<T, let N: u32> Eq for [T; N]\nwhere\n    T: Eq,\n{\n    fn eq(self, other: [T; N]) -> bool {\n        let mut result = true;\n        for i in 0..self.len() {\n            result &= self[i].eq(other[i]);\n        }\n        result\n    }\n}\n\nimpl<T> Eq for [T]\nwhere\n    T: Eq,\n{\n    fn eq(self, other: [T]) -> bool {\n        let mut result = self.len() == other.len();\n        for i in 0..self.len() {\n            result &= self[i].eq(other[i]);\n        }\n        result\n    }\n}\n\nimpl<let N: u32> Eq for str<N> {\n    fn eq(self, other: str<N>) -> bool {\n        let self_bytes = self.as_bytes();\n        let other_bytes = other.as_bytes();\n        self_bytes == other_bytes\n    }\n}\n\nimpl<A, B> Eq for (A, B)\nwhere\n    A: Eq,\n    B: Eq,\n{\n    fn eq(self, other: (A, B)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1)\n    }\n}\n\nimpl<A, B, C> Eq for (A, B, C)\nwhere\n    A: Eq,\n    B: Eq,\n    C: Eq,\n{\n    fn eq(self, other: (A, B, C)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1) & self.2.eq(other.2)\n    }\n}\n\nimpl<A, B, C, D> Eq for (A, B, C, D)\nwhere\n    A: Eq,\n    B: Eq,\n    C: Eq,\n    D: Eq,\n{\n    fn eq(self, other: (A, B, C, D)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1) & self.2.eq(other.2) & self.3.eq(other.3)\n    }\n}\n\nimpl<A, B, C, D, E> Eq for (A, B, C, D, E)\nwhere\n    A: Eq,\n    B: Eq,\n    C: Eq,\n    D: Eq,\n    E: Eq,\n{\n    fn eq(self, other: (A, B, C, D, E)) -> bool {\n        self.0.eq(other.0)\n            & self.1.eq(other.1)\n            & self.2.eq(other.2)\n            & self.3.eq(other.3)\n            & self.4.eq(other.4)\n    }\n}\n\nimpl Eq for Ordering {\n    fn eq(self, other: Ordering) -> bool {\n        self.result == other.result\n    }\n}\n\n// Noir doesn't have enums yet so we emulate (Lt | Eq | Gt) with a struct\n// that has 3 public functions for constructing the struct.\npub struct Ordering {\n    result: Field,\n}\n\nimpl Ordering {\n    // Implementation note: 0, 1, and 2 for Lt, Eq, and Gt are built\n    // into the compiler, do not change these without also updating\n    // the compiler itself!\n    pub fn less() -> Ordering {\n        Ordering { result: 0 }\n    }\n\n    pub fn equal() -> Ordering {\n        Ordering { result: 1 }\n    }\n\n    pub fn greater() -> Ordering {\n        Ordering { result: 2 }\n    }\n}\n\n#[derive_via(derive_ord)]\n// docs:start:ord-trait\npub trait Ord {\n    fn cmp(self, other: Self) -> Ordering;\n}\n// docs:end:ord-trait\n\n// docs:start:derive_ord\ncomptime fn derive_ord(s: StructDefinition) -> Quoted {\n    let signature = quote { fn cmp(_self: Self, _other: Self) -> std::cmp::Ordering };\n    let for_each_field = |name| quote {\n        if result == std::cmp::Ordering::equal() {\n            result = _self.$name.cmp(_other.$name);\n        }\n    };\n    let body = |fields| quote {\n        let mut result = std::cmp::Ordering::equal();\n        $fields\n        result\n    };\n    crate::meta::make_trait_impl(s, quote { Ord }, signature, for_each_field, quote {}, body)\n}\n// docs:end:derive_ord\n\n// Note: Field deliberately does not implement Ord\n\nimpl Ord for u64 {\n    fn cmp(self, other: u64) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u32 {\n    fn cmp(self, other: u32) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u16 {\n    fn cmp(self, other: u16) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u8 {\n    fn cmp(self, other: u8) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i8 {\n    fn cmp(self, other: i8) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i16 {\n    fn cmp(self, other: i16) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i32 {\n    fn cmp(self, other: i32) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i64 {\n    fn cmp(self, other: i64) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for () {\n    fn cmp(_self: Self, _other: ()) -> Ordering {\n        Ordering::equal()\n    }\n}\n\nimpl Ord for bool {\n    fn cmp(self, other: bool) -> Ordering {\n        if self {\n            if other {\n                Ordering::equal()\n            } else {\n                Ordering::greater()\n            }\n        } else if other {\n            Ordering::less()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl<T, let N: u32> Ord for [T; N]\nwhere\n    T: Ord,\n{\n    // The first non-equal element of both arrays determines\n    // the ordering for the whole array.\n    fn cmp(self, other: [T; N]) -> Ordering {\n        let mut result = Ordering::equal();\n        for i in 0..self.len() {\n            if result == Ordering::equal() {\n                let result_i = self[i].cmp(other[i]);\n\n                if result_i == Ordering::less() {\n                    result = result_i;\n                } else if result_i == Ordering::greater() {\n                    result = result_i;\n                }\n            }\n        }\n        result\n    }\n}\n\nimpl<T> Ord for [T]\nwhere\n    T: Ord,\n{\n    // The first non-equal element of both arrays determines\n    // the ordering for the whole array.\n    fn cmp(self, other: [T]) -> Ordering {\n        let mut result = self.len().cmp(other.len());\n        for i in 0..self.len() {\n            if result == Ordering::equal() {\n                let result_i = self[i].cmp(other[i]);\n\n                if result_i == Ordering::less() {\n                    result = result_i;\n                } else if result_i == Ordering::greater() {\n                    result = result_i;\n                }\n            }\n        }\n        result\n    }\n}\n\nimpl<A, B> Ord for (A, B)\nwhere\n    A: Ord,\n    B: Ord,\n{\n    fn cmp(self, other: (A, B)) -> Ordering {\n        let result = self.0.cmp(other.0);\n\n        if result != Ordering::equal() {\n            result\n        } else {\n            self.1.cmp(other.1)\n        }\n    }\n}\n\nimpl<A, B, C> Ord for (A, B, C)\nwhere\n    A: Ord,\n    B: Ord,\n    C: Ord,\n{\n    fn cmp(self, other: (A, B, C)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        result\n    }\n}\n\nimpl<A, B, C, D> Ord for (A, B, C, D)\nwhere\n    A: Ord,\n    B: Ord,\n    C: Ord,\n    D: Ord,\n{\n    fn cmp(self, other: (A, B, C, D)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        if result == Ordering::equal() {\n            result = self.3.cmp(other.3);\n        }\n\n        result\n    }\n}\n\nimpl<A, B, C, D, E> Ord for (A, B, C, D, E)\nwhere\n    A: Ord,\n    B: Ord,\n    C: Ord,\n    D: Ord,\n    E: Ord,\n{\n    fn cmp(self, other: (A, B, C, D, E)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        if result == Ordering::equal() {\n            result = self.3.cmp(other.3);\n        }\n\n        if result == Ordering::equal() {\n            result = self.4.cmp(other.4);\n        }\n\n        result\n    }\n}\n\n// Compares and returns the maximum of two values.\n//\n// Returns the second argument if the comparison determines them to be equal.\n//\n// # Examples\n//\n// ```\n// use std::cmp;\n//\n// assert_eq(cmp::max(1, 2), 2);\n// assert_eq(cmp::max(2, 2), 2);\n// ```\npub fn max<T>(v1: T, v2: T) -> T\nwhere\n    T: Ord,\n{\n    if v1 > v2 {\n        v1\n    } else {\n        v2\n    }\n}\n\n// Compares and returns the minimum of two values.\n//\n// Returns the first argument if the comparison determines them to be equal.\n//\n// # Examples\n//\n// ```\n// use std::cmp;\n//\n// assert_eq(cmp::min(1, 2), 1);\n// assert_eq(cmp::min(2, 2), 2);\n// ```\npub fn min<T>(v1: T, v2: T) -> T\nwhere\n    T: Ord,\n{\n    if v1 > v2 {\n        v2\n    } else {\n        v1\n    }\n}\n\nmod cmp_tests {\n    use crate::cmp::{max, min};\n\n    #[test]\n    fn sanity_check_min() {\n        assert_eq(min(0 as u64, 1 as u64), 0);\n        assert_eq(min(0 as u64, 0 as u64), 0);\n        assert_eq(min(1 as u64, 1 as u64), 1);\n        assert_eq(min(255 as u8, 0 as u8), 0);\n    }\n\n    #[test]\n    fn sanity_check_max() {\n        assert_eq(max(0 as u64, 1 as u64), 1);\n        assert_eq(max(0 as u64, 0 as u64), 0);\n        assert_eq(max(1 as u64, 1 as u64), 1);\n        assert_eq(max(255 as u8, 0 as u8), 255);\n    }\n}\n", "path": "std/cmp.nr" }, "25": { "source": "use crate::field::field_less_than;\nuse crate::runtime::is_unconstrained;\n\n// The low and high decomposition of the field modulus\nglobal PLO: Field = 53438638232309528389504892708671455233;\nglobal PHI: Field = 64323764613183177041862057485226039389;\n\npub(crate) global TWO_POW_128: Field = 0x100000000000000000000000000000000;\nglobal TWO_POW_64: Field = 0x10000000000000000;\n\n// Decomposes a single field into two 16 byte fields.\nfn compute_decomposition(mut x: Field) -> (Field, Field) {\n    // Here's we're taking advantage of truncating 64 bit limbs from the input field\n    // and then subtracting them from the input such the field division is equivalent to integer division.\n    let low_lower_64 = (x as u64) as Field;\n    x = (x - low_lower_64) / TWO_POW_64;\n    let low_upper_64 = (x as u64) as Field;\n\n    let high = (x - low_upper_64) / TWO_POW_64;\n    let low = low_upper_64 * TWO_POW_64 + low_lower_64;\n\n    (low, high)\n}\n\npub(crate) unconstrained fn decompose_hint(x: Field) -> (Field, Field) {\n    compute_decomposition(x)\n}\n\nunconstrained fn lte_hint(x: Field, y: Field) -> bool {\n    if x == y {\n        true\n    } else {\n        field_less_than(x, y)\n    }\n}\n\n// Assert that (alo > blo && ahi >= bhi) || (alo <= blo && ahi > bhi)\nfn assert_gt_limbs(a: (Field, Field), b: (Field, Field)) {\n    let (alo, ahi) = a;\n    let (blo, bhi) = b;\n    unsafe {\n        let borrow = lte_hint(alo, blo);\n\n        let rlo = alo - blo - 1 + (borrow as Field) * TWO_POW_128;\n        let rhi = ahi - bhi - (borrow as Field);\n\n        rlo.assert_max_bit_size::<128>();\n        rhi.assert_max_bit_size::<128>();\n    }\n}\n\n/// Decompose a single field into two 16 byte fields.\npub fn decompose(x: Field) -> (Field, Field) {\n    if is_unconstrained() {\n        compute_decomposition(x)\n    } else {\n        unsafe {\n            // Take hints of the decomposition\n            let (xlo, xhi) = decompose_hint(x);\n\n            // Range check the limbs\n            xlo.assert_max_bit_size::<128>();\n            xhi.assert_max_bit_size::<128>();\n\n            // Check that the decomposition is correct\n            assert_eq(x, xlo + TWO_POW_128 * xhi);\n\n            // Assert that the decomposition of P is greater than the decomposition of x\n            assert_gt_limbs((PLO, PHI), (xlo, xhi));\n            (xlo, xhi)\n        }\n    }\n}\n\npub fn assert_gt(a: Field, b: Field) {\n    if is_unconstrained() {\n        assert(unsafe { field_less_than(b, a) });\n    } else {\n        // Decompose a and b\n        let a_limbs = decompose(a);\n        let b_limbs = decompose(b);\n\n        // Assert that a_limbs is greater than b_limbs\n        assert_gt_limbs(a_limbs, b_limbs)\n    }\n}\n\npub fn assert_lt(a: Field, b: Field) {\n    assert_gt(b, a);\n}\n\npub fn gt(a: Field, b: Field) -> bool {\n    if is_unconstrained() {\n        unsafe {\n            field_less_than(b, a)\n        }\n    } else if a == b {\n        false\n    } else {\n        // Take a hint of the comparison and verify it\n        unsafe {\n            if field_less_than(a, b) {\n                assert_gt(b, a);\n                false\n            } else {\n                assert_gt(a, b);\n                true\n            }\n        }\n    }\n}\n\npub fn lt(a: Field, b: Field) -> bool {\n    gt(b, a)\n}\n\nmod tests {\n    // TODO: Allow imports from \"super\"\n    use crate::field::bn254::{assert_gt, decompose, gt, lte_hint, PHI, PLO, TWO_POW_128};\n\n    #[test]\n    fn check_decompose() {\n        assert_eq(decompose(TWO_POW_128), (0, 1));\n        assert_eq(decompose(TWO_POW_128 + 0x1234567890), (0x1234567890, 1));\n        assert_eq(decompose(0x1234567890), (0x1234567890, 0));\n    }\n\n    #[test]\n    unconstrained fn check_decompose_unconstrained() {\n        assert_eq(decompose(TWO_POW_128), (0, 1));\n        assert_eq(decompose(TWO_POW_128 + 0x1234567890), (0x1234567890, 1));\n        assert_eq(decompose(0x1234567890), (0x1234567890, 0));\n    }\n\n    #[test]\n    unconstrained fn check_lte_hint() {\n        assert(lte_hint(0, 1));\n        assert(lte_hint(0, 0x100));\n        assert(lte_hint(0x100, TWO_POW_128 - 1));\n        assert(!lte_hint(0 - 1, 0));\n\n        assert(lte_hint(0, 0));\n        assert(lte_hint(0x100, 0x100));\n        assert(lte_hint(0 - 1, 0 - 1));\n    }\n\n    #[test]\n    fn check_assert_gt() {\n        assert_gt(1, 0);\n        assert_gt(0x100, 0);\n        assert_gt((0 - 1), (0 - 2));\n        assert_gt(TWO_POW_128, 0);\n        assert_gt(0 - 1, 0);\n    }\n\n    #[test]\n    unconstrained fn check_assert_gt_unconstrained() {\n        assert_gt(1, 0);\n        assert_gt(0x100, 0);\n        assert_gt((0 - 1), (0 - 2));\n        assert_gt(TWO_POW_128, 0);\n        assert_gt(0 - 1, 0);\n    }\n\n    #[test]\n    fn check_gt() {\n        assert(gt(1, 0));\n        assert(gt(0x100, 0));\n        assert(gt((0 - 1), (0 - 2)));\n        assert(gt(TWO_POW_128, 0));\n        assert(!gt(0, 0));\n        assert(!gt(0, 0x100));\n        assert(gt(0 - 1, 0 - 2));\n        assert(!gt(0 - 2, 0 - 1));\n    }\n\n    #[test]\n    unconstrained fn check_gt_unconstrained() {\n        assert(gt(1, 0));\n        assert(gt(0x100, 0));\n        assert(gt((0 - 1), (0 - 2)));\n        assert(gt(TWO_POW_128, 0));\n        assert(!gt(0, 0));\n        assert(!gt(0, 0x100));\n        assert(gt(0 - 1, 0 - 2));\n        assert(!gt(0 - 2, 0 - 1));\n    }\n\n    #[test]\n    fn check_plo_phi() {\n        assert_eq(PLO + PHI * TWO_POW_128, 0);\n        let p_bytes = crate::field::modulus_le_bytes();\n        let mut p_low: Field = 0;\n        let mut p_high: Field = 0;\n\n        let mut offset = 1;\n        for i in 0..16 {\n            p_low += (p_bytes[i] as Field) * offset;\n            p_high += (p_bytes[i + 16] as Field) * offset;\n            offset *= 256;\n        }\n        assert_eq(p_low, PLO);\n        assert_eq(p_high, PHI);\n    }\n}\n", "path": "std/field/bn254.nr" }, "26": { "source": "pub mod bn254;\nuse crate::runtime::is_unconstrained;\nuse bn254::lt as bn254_lt;\n\nimpl Field {\n    /// Asserts that `self` can be represented in `bit_size` bits.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^{bit_size}`.\n    // docs:start:assert_max_bit_size\n    pub fn assert_max_bit_size<let BIT_SIZE: u32>(self) {\n        // docs:end:assert_max_bit_size\n        assert(BIT_SIZE < modulus_num_bits() as u32);\n        self.__assert_max_bit_size(BIT_SIZE);\n    }\n\n    #[builtin(apply_range_constraint)]\n    fn __assert_max_bit_size(self, bit_size: u32) {}\n\n    /// Decomposes `self` into its little endian bit decomposition as a `[u1; N]` array.\n    /// This slice will be zero padded should not all bits be necessary to represent `self`.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// Values of `N` equal to or greater than the number of bits necessary to represent the `Field` modulus\n    /// (e.g. 254 for the BN254 field) allow for multiple bit decompositions. This is due to how the `Field` will\n    /// wrap around due to overflow when verifying the decomposition.\n    #[builtin(to_le_bits)]\n    // docs:start:to_le_bits\n    pub fn to_le_bits<let N: u32>(self: Self) -> [u1; N] {}\n    // docs:end:to_le_bits\n\n    /// Decomposes `self` into its big endian bit decomposition as a `[u1; N]` array.\n    /// This array will be zero padded should not all bits be necessary to represent `self`.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// Values of `N` equal to or greater than the number of bits necessary to represent the `Field` modulus\n    /// (e.g. 254 for the BN254 field) allow for multiple bit decompositions. This is due to how the `Field` will\n    /// wrap around due to overflow when verifying the decomposition.\n    #[builtin(to_be_bits)]\n    // docs:start:to_be_bits\n    pub fn to_be_bits<let N: u32>(self: Self) -> [u1; N] {}\n    // docs:end:to_be_bits\n\n    /// Decomposes `self` into its little endian byte decomposition as a `[u8;N]` array\n    /// This array will be zero padded should not all bytes be necessary to represent `self`.\n    ///\n    /// # Failures\n    ///  The length N of the array must be big enough to contain all the bytes of the 'self',\n    ///  and no more than the number of bytes required to represent the field modulus\n    ///\n    /// # Safety\n    /// The result is ensured to be the canonical decomposition of the field element\n    // docs:start:to_le_bytes\n    pub fn to_le_bytes<let N: u32>(self: Self) -> [u8; N] {\n        // docs:end:to_le_bytes\n        // Compute the byte decomposition\n        let bytes = self.to_le_radix(256);\n\n        if !is_unconstrained() {\n            // Ensure that the byte decomposition does not overflow the modulus\n            let p = modulus_le_bytes();\n            assert(bytes.len() <= p.len());\n            let mut ok = bytes.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bytes[N - 1 - i] != p[N - 1 - i]) {\n                        assert(bytes[N - 1 - i] < p[N - 1 - i]);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bytes\n    }\n\n    /// Decomposes `self` into its big endian byte decomposition as a `[u8;N]` array of length required to represent the field modulus\n    /// This array will be zero padded should not all bytes be necessary to represent `self`.\n    ///\n    /// # Failures\n    ///  The length N of the array must be big enough to contain all the bytes of the 'self',\n    ///  and no more than the number of bytes required to represent the field modulus\n    ///\n    /// # Safety\n    /// The result is ensured to be the canonical decomposition of the field element\n    // docs:start:to_be_bytes\n    pub fn to_be_bytes<let N: u32>(self: Self) -> [u8; N] {\n        // docs:end:to_be_bytes\n        // Compute the byte decomposition\n        let bytes = self.to_be_radix(256);\n\n        if !is_unconstrained() {\n            // Ensure that the byte decomposition does not overflow the modulus\n            let p = modulus_be_bytes();\n            assert(bytes.len() <= p.len());\n            let mut ok = bytes.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bytes[i] != p[i]) {\n                        assert(bytes[i] < p[i]);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bytes\n    }\n\n    // docs:start:to_le_radix\n    pub fn to_le_radix<let N: u32>(self: Self, radix: u32) -> [u8; N] {\n        // Brillig does not need an immediate radix\n        if !crate::runtime::is_unconstrained() {\n            crate::assert_constant(radix);\n        }\n        self.__to_le_radix(radix)\n    }\n    // docs:end:to_le_radix\n\n    // docs:start:to_be_radix\n    pub fn to_be_radix<let N: u32>(self: Self, radix: u32) -> [u8; N] {\n        // Brillig does not need an immediate radix\n        if !crate::runtime::is_unconstrained() {\n            crate::assert_constant(radix);\n        }\n        self.__to_be_radix(radix)\n    }\n    // docs:end:to_be_radix\n\n    // `_radix` must be less than 256\n    #[builtin(to_le_radix)]\n    fn __to_le_radix<let N: u32>(self, radix: u32) -> [u8; N] {}\n\n    #[builtin(to_be_radix)]\n    fn __to_be_radix<let N: u32>(self, radix: u32) -> [u8; N] {}\n\n    // Returns self to the power of the given exponent value.\n    // Caution: we assume the exponent fits into 32 bits\n    // using a bigger bit size impacts negatively the performance and should be done only if the exponent does not fit in 32 bits\n    pub fn pow_32(self, exponent: Field) -> Field {\n        let mut r: Field = 1;\n        let b: [u1; 32] = exponent.to_le_bits();\n\n        for i in 1..33 {\n            r *= r;\n            r = (b[32 - i] as Field) * (r * self) + (1 - b[32 - i] as Field) * r;\n        }\n        r\n    }\n\n    // Parity of (prime) Field element, i.e. sgn0(x mod p) = 0 if x `elem` {0, ..., p-1} is even, otherwise sgn0(x mod p) = 1.\n    pub fn sgn0(self) -> u1 {\n        self as u1\n    }\n\n    pub fn lt(self, another: Field) -> bool {\n        if crate::compat::is_bn254() {\n            bn254_lt(self, another)\n        } else {\n            lt_fallback(self, another)\n        }\n    }\n\n    /// Convert a little endian byte array to a field element.\n    /// If the provided byte array overflows the field modulus then the Field will silently wrap around.\n    pub fn from_le_bytes<let N: u32>(bytes: [u8; N]) -> Field {\n        let mut v = 1;\n        let mut result = 0;\n\n        for i in 0..N {\n            result += (bytes[i] as Field) * v;\n            v = v * 256;\n        }\n        result\n    }\n\n    /// Convert a big endian byte array to a field element.\n    /// If the provided byte array overflows the field modulus then the Field will silently wrap around.\n    pub fn from_be_bytes<let N: u32>(bytes: [u8; N]) -> Field {\n        let mut v = 1;\n        let mut result = 0;\n\n        for i in 0..N {\n            result += (bytes[N - 1 - i] as Field) * v;\n            v = v * 256;\n        }\n        result\n    }\n}\n\n#[builtin(modulus_num_bits)]\npub comptime fn modulus_num_bits() -> u64 {}\n\n#[builtin(modulus_be_bits)]\npub comptime fn modulus_be_bits() -> [u1] {}\n\n#[builtin(modulus_le_bits)]\npub comptime fn modulus_le_bits() -> [u1] {}\n\n#[builtin(modulus_be_bytes)]\npub comptime fn modulus_be_bytes() -> [u8] {}\n\n#[builtin(modulus_le_bytes)]\npub comptime fn modulus_le_bytes() -> [u8] {}\n\n/// An unconstrained only built in to efficiently compare fields.\n#[builtin(field_less_than)]\nunconstrained fn __field_less_than(x: Field, y: Field) -> bool {}\n\npub(crate) unconstrained fn field_less_than(x: Field, y: Field) -> bool {\n    __field_less_than(x, y)\n}\n\n// Convert a 32 byte array to a field element by modding\npub fn bytes32_to_field(bytes32: [u8; 32]) -> Field {\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..16 {\n        high = high + (bytes32[15 - i] as Field) * v;\n        low = low + (bytes32[16 + 15 - i] as Field) * v;\n        v = v * 256;\n    }\n    // Abuse that a % p + b % p = (a + b) % p and that low < p\n    low + high * v\n}\n\nfn lt_fallback(x: Field, y: Field) -> bool {\n    if is_unconstrained() {\n        unsafe {\n            field_less_than(x, y)\n        }\n    } else {\n        let x_bytes: [u8; 32] = x.to_le_bytes();\n        let y_bytes: [u8; 32] = y.to_le_bytes();\n        let mut x_is_lt = false;\n        let mut done = false;\n        for i in 0..32 {\n            if (!done) {\n                let x_byte = x_bytes[32 - 1 - i] as u8;\n                let y_byte = y_bytes[32 - 1 - i] as u8;\n                let bytes_match = x_byte == y_byte;\n                if !bytes_match {\n                    x_is_lt = x_byte < y_byte;\n                    done = true;\n                }\n            }\n        }\n        x_is_lt\n    }\n}\n\nmod tests {\n    use super::field_less_than;\n\n    #[test]\n    // docs:start:to_be_bits_example\n    fn test_to_be_bits() {\n        let field = 2;\n        let bits: [u1; 8] = field.to_be_bits();\n        assert_eq(bits, [0, 0, 0, 0, 0, 0, 1, 0]);\n    }\n    // docs:end:to_be_bits_example\n\n    #[test]\n    // docs:start:to_le_bits_example\n    fn test_to_le_bits() {\n        let field = 2;\n        let bits: [u1; 8] = field.to_le_bits();\n        assert_eq(bits, [0, 1, 0, 0, 0, 0, 0, 0]);\n    }\n    // docs:end:to_le_bits_example\n\n    #[test]\n    // docs:start:to_be_bytes_example\n    fn test_to_be_bytes() {\n        let field = 2;\n        let bytes: [u8; 8] = field.to_be_bytes();\n        assert_eq(bytes, [0, 0, 0, 0, 0, 0, 0, 2]);\n        assert_eq(Field::from_be_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_be_bytes_example\n\n    #[test]\n    // docs:start:to_le_bytes_example\n    fn test_to_le_bytes() {\n        let field = 2;\n        let bytes: [u8; 8] = field.to_le_bytes();\n        assert_eq(bytes, [2, 0, 0, 0, 0, 0, 0, 0]);\n        assert_eq(Field::from_le_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_le_bytes_example\n\n    #[test]\n    // docs:start:to_be_radix_example\n    fn test_to_be_radix() {\n        let field = 2;\n        let bytes: [u8; 8] = field.to_be_radix(256);\n        assert_eq(bytes, [0, 0, 0, 0, 0, 0, 0, 2]);\n        assert_eq(Field::from_be_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_be_radix_example\n\n    #[test]\n    // docs:start:to_le_radix_example\n    fn test_to_le_radix() {\n        let field = 2;\n        let bytes: [u8; 8] = field.to_le_radix(256);\n        assert_eq(bytes, [2, 0, 0, 0, 0, 0, 0, 0]);\n        assert_eq(Field::from_le_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_le_radix_example\n\n    #[test]\n    unconstrained fn test_field_less_than() {\n        assert(field_less_than(0, 1));\n        assert(field_less_than(0, 0x100));\n        assert(field_less_than(0x100, 0 - 1));\n        assert(!field_less_than(0 - 1, 0));\n    }\n}\n", "path": "std/field/mod.nr" }, "34": { "source": "use crate::runtime::is_unconstrained;\n\n// Implementation of SHA-256 mapping a byte array of variable length to\n// 32 bytes.\n\n// A message block is up to 64 bytes taken from the input.\nglobal BLOCK_SIZE = 64;\n\n// The first index in the block where the 8 byte message size will be written.\nglobal MSG_SIZE_PTR = 56;\n\n// Size of the message block when packed as 4-byte integer array.\nglobal INT_BLOCK_SIZE = 16;\n\n// A `u32` integer consists of 4 bytes.\nglobal INT_SIZE = 4;\n\n// Index of the integer in the `INT_BLOCK` where the length is written.\nglobal INT_SIZE_PTR = MSG_SIZE_PTR / INT_SIZE;\n\n// Magic numbers for bit shifting.\n// Works with actual bit shifting as well as the compiler turns them into * and /\n// but circuit execution appears to be 10% faster this way.\nglobal TWO_POW_8 = 256;\nglobal TWO_POW_16 = TWO_POW_8 * 256;\nglobal TWO_POW_24 = TWO_POW_16 * 256;\nglobal TWO_POW_32 = TWO_POW_24 as u64 * 256;\n\n// Index of a byte in a 64 byte block; ie. 0..=63\ntype BLOCK_BYTE_PTR = u32;\n\n// The foreign function to compress blocks works on 16 pieces of 4-byte integers, instead of 64 bytes.\ntype INT_BLOCK = [u32; INT_BLOCK_SIZE];\n\n// A message block is a slice of the original message of a fixed size,\n// potentially padded with zeros, with neighbouring 4 bytes packed into integers.\ntype MSG_BLOCK = INT_BLOCK;\n\n// The hash is 32 bytes.\ntype HASH = [u8; 32];\n\n// The state accumulates the blocks.\n// Its overall size is the same as the `HASH`.\ntype STATE = [u32; 8];\n\n// Deprecated in favour of `sha256_var`\n// docs:start:sha256\npub fn sha256<let N: u32>(input: [u8; N]) -> HASH\n// docs:end:sha256\n{\n    digest(input)\n}\n\n#[foreign(sha256_compression)]\npub fn sha256_compression(_input: INT_BLOCK, _state: STATE) -> STATE {}\n\n// SHA-256 hash function\n#[no_predicates]\npub fn digest<let N: u32>(msg: [u8; N]) -> HASH {\n    sha256_var(msg, N as u64)\n}\n\n// Variable size SHA-256 hash\npub fn sha256_var<let N: u32>(msg: [u8; N], message_size: u64) -> HASH {\n    let message_size = message_size as u32;\n    let num_blocks = N / BLOCK_SIZE;\n    let mut msg_block: MSG_BLOCK = [0; INT_BLOCK_SIZE];\n    // Intermediate hash, starting with the canonical initial value\n    let mut h: STATE = [\n        1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635,\n        1541459225,\n    ];\n    // Pointer into msg_block on a 64 byte scale\n    let mut msg_byte_ptr = 0;\n    for i in 0..num_blocks {\n        let msg_start = BLOCK_SIZE * i;\n        let (new_msg_block, new_msg_byte_ptr) =\n            unsafe { build_msg_block(msg, message_size, msg_start) };\n\n        if msg_start < message_size {\n            msg_block = new_msg_block;\n        }\n\n        if !is_unconstrained() {\n            // Verify the block we are compressing was appropriately constructed\n            let new_msg_byte_ptr = verify_msg_block(msg, message_size, msg_block, msg_start);\n            if msg_start < message_size {\n                msg_byte_ptr = new_msg_byte_ptr;\n            }\n        } else if msg_start < message_size {\n            msg_byte_ptr = new_msg_byte_ptr;\n        }\n\n        // If the block is filled, compress it.\n        // An un-filled block is handled after this loop.\n        if (msg_start < message_size) & (msg_byte_ptr == BLOCK_SIZE) {\n            h = sha256_compression(msg_block, h);\n        }\n    }\n\n    let modulo = N % BLOCK_SIZE;\n    // Handle setup of the final msg block.\n    // This case is only hit if the msg is less than the block size,\n    // or our message cannot be evenly split into blocks.\n    if modulo != 0 {\n        let msg_start = BLOCK_SIZE * num_blocks;\n        let (new_msg_block, new_msg_byte_ptr) =\n            unsafe { build_msg_block(msg, message_size, msg_start) };\n\n        if msg_start < message_size {\n            msg_block = new_msg_block;\n        }\n\n        if !is_unconstrained() {\n            let new_msg_byte_ptr = verify_msg_block(msg, message_size, msg_block, msg_start);\n            if msg_start < message_size {\n                msg_byte_ptr = new_msg_byte_ptr;\n                verify_msg_block_padding(msg_block, msg_byte_ptr);\n            }\n        } else if msg_start < message_size {\n            msg_byte_ptr = new_msg_byte_ptr;\n        }\n    }\n\n    // If we had modulo == 0 then it means the last block was full,\n    // and we can reset the pointer to zero to overwrite it.\n    if msg_byte_ptr == BLOCK_SIZE {\n        msg_byte_ptr = 0;\n    }\n\n    // Pad the rest such that we have a [u32; 2] block at the end representing the length\n    // of the message, and a block of 1 0 ... 0 following the message (i.e. [1 << 7, 0, ..., 0]).\n    // Here we rely on the fact that everything beyond the available input is set to 0.\n    msg_block = update_block_item(\n        msg_block,\n        msg_byte_ptr,\n        |msg_item| set_item_byte_then_zeros(msg_item, msg_byte_ptr, 1 << 7),\n    );\n    msg_byte_ptr = msg_byte_ptr + 1;\n    let last_block = msg_block;\n\n    // If we don't have room to write the size, compress the block and reset it.\n    if msg_byte_ptr > MSG_SIZE_PTR {\n        h = sha256_compression(msg_block, h);\n        // `attach_len_to_msg_block` will zero out everything after the `msg_byte_ptr`.\n        msg_byte_ptr = 0;\n    }\n\n    msg_block = unsafe { attach_len_to_msg_block(msg_block, msg_byte_ptr, message_size) };\n\n    if !is_unconstrained() {\n        verify_msg_len(msg_block, last_block, msg_byte_ptr, message_size);\n    }\n\n    hash_final_block(msg_block, h)\n}\n\n// Take `BLOCK_SIZE` number of bytes from `msg` starting at `msg_start`.\n// Returns the block and the length that has been copied rather than padded with zeros.\nunconstrained fn build_msg_block<let N: u32>(\n    msg: [u8; N],\n    message_size: u32,\n    msg_start: u32,\n) -> (MSG_BLOCK, BLOCK_BYTE_PTR) {\n    let mut msg_block: MSG_BLOCK = [0; INT_BLOCK_SIZE];\n\n    // We insert `BLOCK_SIZE` bytes (or up to the end of the message)\n    let block_input = if msg_start + BLOCK_SIZE > message_size {\n        if message_size < msg_start {\n            // This function is sometimes called with `msg_start` past the end of the message.\n            // In this case we return an empty block and zero pointer to signal that the result should be ignored.\n            0\n        } else {\n            message_size - msg_start\n        }\n    } else {\n        BLOCK_SIZE\n    };\n\n    // Figure out the number of items in the int array that we have to pack.\n    // e.g. if the input is [0,1,2,3,4,5] then we need to pack it as 2 items: [0123, 4500]\n    let mut int_input = block_input / INT_SIZE;\n    if block_input % INT_SIZE != 0 {\n        int_input = int_input + 1;\n    };\n\n    for i in 0..int_input {\n        let mut msg_item: u32 = 0;\n        // Always construct the integer as 4 bytes, even if it means going beyond the input.\n        for j in 0..INT_SIZE {\n            let k = i * INT_SIZE + j;\n            let msg_byte = if k < block_input {\n                msg[msg_start + k]\n            } else {\n                0\n            };\n            msg_item = lshift8(msg_item, 1) + msg_byte as u32;\n        }\n        msg_block[i] = msg_item;\n    }\n\n    // Returning the index as if it was a 64 byte array.\n    // We have to project it down to 16 items and bit shifting to get a byte back if we need it.\n    (msg_block, block_input)\n}\n\n// Verify the block we are compressing was appropriately constructed by `build_msg_block`\n// and matches the input data. Returns the index of the first unset item.\n// If `message_size` is less than `msg_start` then this is called with the old non-empty block;\n// in that case we can skip verification, ie. no need to check that everything is zero.\nfn verify_msg_block<let N: u32>(\n    msg: [u8; N],\n    message_size: u32,\n    msg_block: MSG_BLOCK,\n    msg_start: u32,\n) -> BLOCK_BYTE_PTR {\n    let mut msg_byte_ptr = 0;\n    let mut msg_end = msg_start + BLOCK_SIZE;\n    if msg_end > N {\n        msg_end = N;\n    }\n    // We might have to go beyond the input to pad the fields.\n    if msg_end % INT_SIZE != 0 {\n        msg_end = msg_end + INT_SIZE - msg_end % INT_SIZE;\n    }\n\n    // Reconstructed packed item.\n    let mut msg_item: u32 = 0;\n\n    // Inclusive at the end so that we can compare the last item.\n    let mut i: u32 = 0;\n    for k in msg_start..=msg_end {\n        if k % INT_SIZE == 0 {\n            // If we consumed some input we can compare against the block.\n            if (msg_start < message_size) & (k > msg_start) {\n                assert_eq(msg_block[i], msg_item as u32);\n                i = i + 1;\n                msg_item = 0;\n            }\n        }\n        // Shift the accumulator\n        msg_item = lshift8(msg_item, 1);\n        // If we have input to consume, add it at the rightmost position.\n        if k < message_size & k < msg_end {\n            msg_item = msg_item + msg[k] as u32;\n            msg_byte_ptr = msg_byte_ptr + 1;\n        }\n    }\n\n    msg_byte_ptr\n}\n\n// Verify the block we are compressing was appropriately padded with zeros by `build_msg_block`.\n// This is only relevant for the last, potentially partially filled block.\nfn verify_msg_block_padding(msg_block: MSG_BLOCK, msg_byte_ptr: BLOCK_BYTE_PTR) {\n    // Check all the way to the end of the block.\n    verify_msg_block_zeros(msg_block, msg_byte_ptr, INT_BLOCK_SIZE);\n}\n\n// Verify that a region of ints in the message block are (partially) zeroed,\n// up to an (exclusive) maximum which can either be the end of the block\n// or just where the size is to be written.\nfn verify_msg_block_zeros(\n    msg_block: MSG_BLOCK,\n    mut msg_byte_ptr: BLOCK_BYTE_PTR,\n    max_int_byte_ptr: u32,\n) {\n    // This variable is used to get around the compiler under-constrained check giving a warning.\n    // We want to check against a constant zero, but if it does not come from the circuit inputs\n    // or return values the compiler check will issue a warning.\n    let zero = msg_block[0] - msg_block[0];\n\n    // First integer which is supposed to be (partially) zero.\n    let mut int_byte_ptr = msg_byte_ptr / INT_SIZE;\n\n    // Check partial zeros.\n    let modulo = msg_byte_ptr % INT_SIZE;\n    if modulo != 0 {\n        let zeros = INT_SIZE - modulo;\n        let mask = if zeros == 3 {\n            TWO_POW_24\n        } else if zeros == 2 {\n            TWO_POW_16\n        } else {\n            TWO_POW_8\n        };\n        assert_eq(msg_block[int_byte_ptr] % mask, zero);\n        int_byte_ptr = int_byte_ptr + 1;\n    }\n\n    // Check the rest of the items.\n    for i in 0..max_int_byte_ptr {\n        if i >= int_byte_ptr {\n            assert_eq(msg_block[i], zero);\n        }\n    }\n}\n\n// Verify that up to the byte pointer the two blocks are equal.\n// At the byte pointer the new block can be partially zeroed.\nfn verify_msg_block_equals_last(\n    msg_block: MSG_BLOCK,\n    last_block: MSG_BLOCK,\n    mut msg_byte_ptr: BLOCK_BYTE_PTR,\n) {\n    // msg_byte_ptr is the position at which they are no longer have to be the same.\n    // First integer which is supposed to be (partially) zero contains that pointer.\n    let mut int_byte_ptr = msg_byte_ptr / INT_SIZE;\n\n    // Check partial zeros.\n    let modulo = msg_byte_ptr % INT_SIZE;\n    if modulo != 0 {\n        // Reconstruct the partially zero item from the last block.\n        let last_field = last_block[int_byte_ptr];\n        let mut msg_item: u32 = 0;\n        // Reset to where they are still equal.\n        msg_byte_ptr = msg_byte_ptr - modulo;\n        for i in 0..INT_SIZE {\n            msg_item = lshift8(msg_item, 1);\n            if i < modulo {\n                msg_item = msg_item + get_item_byte(last_field, msg_byte_ptr) as u32;\n                msg_byte_ptr = msg_byte_ptr + 1;\n            }\n        }\n        assert_eq(msg_block[int_byte_ptr], msg_item);\n    }\n\n    for i in 0..INT_SIZE_PTR {\n        if i < int_byte_ptr {\n            assert_eq(msg_block[i], last_block[i]);\n        }\n    }\n}\n\n// Apply a function on the block item which the pointer indicates.\nfn update_block_item<Env>(\n    mut msg_block: MSG_BLOCK,\n    msg_byte_ptr: BLOCK_BYTE_PTR,\n    f: fn[Env](u32) -> u32,\n) -> MSG_BLOCK {\n    let i = msg_byte_ptr / INT_SIZE;\n    msg_block[i] = f(msg_block[i]);\n    msg_block\n}\n\n// Set the rightmost `zeros` number of bytes to 0.\nfn set_item_zeros(item: u32, zeros: u8) -> u32 {\n    lshift8(rshift8(item, zeros), zeros)\n}\n\n// Replace one byte in the item with a value, and set everything after it to zero.\nfn set_item_byte_then_zeros(msg_item: u32, msg_byte_ptr: BLOCK_BYTE_PTR, msg_byte: u8) -> u32 {\n    let zeros = INT_SIZE - msg_byte_ptr % INT_SIZE;\n    let zeroed_item = set_item_zeros(msg_item, zeros as u8);\n    let new_item = byte_into_item(msg_byte, msg_byte_ptr);\n    zeroed_item + new_item\n}\n\n// Get a byte of a message item according to its overall position in the `BLOCK_SIZE` space.\nfn get_item_byte(mut msg_item: u32, msg_byte_ptr: BLOCK_BYTE_PTR) -> u8 {\n    // How many times do we have to shift to the right to get to the position we want?\n    let max_shifts = INT_SIZE - 1;\n    let shifts = max_shifts - msg_byte_ptr % INT_SIZE;\n    msg_item = rshift8(msg_item, shifts as u8);\n    // At this point the byte we want is in the rightmost position.\n    msg_item as u8\n}\n\n// Project a byte into a position in a field based on the overall block pointer.\n// For example putting 1 into pointer 5 would be 100, because overall we would\n// have [____, 0100] with indexes [0123,4567].\nfn byte_into_item(msg_byte: u8, msg_byte_ptr: BLOCK_BYTE_PTR) -> u32 {\n    let mut msg_item = msg_byte as u32;\n    // How many times do we have to shift to the left to get to the position we want?\n    let max_shifts = INT_SIZE - 1;\n    let shifts = max_shifts - msg_byte_ptr % INT_SIZE;\n    lshift8(msg_item, shifts as u8)\n}\n\n// Construct a field out of 4 bytes.\nfn make_item(b0: u8, b1: u8, b2: u8, b3: u8) -> u32 {\n    let mut item = b0 as u32;\n    item = lshift8(item, 1) + b1 as u32;\n    item = lshift8(item, 1) + b2 as u32;\n    item = lshift8(item, 1) + b3 as u32;\n    item\n}\n\n// Shift by 8 bits to the left between 0 and 4 times.\n// Checks `is_unconstrained()` to just use a bitshift if we're running in an unconstrained context,\n// otherwise multiplies by 256.\nfn lshift8(item: u32, shifts: u8) -> u32 {\n    if is_unconstrained() {\n        if item == 0 {\n            0\n        } else {\n            // Brillig wouldn't shift 0<<4 without overflow.\n            item << (8 * shifts)\n        }\n    } else {\n        // We can do a for loop up to INT_SIZE or an if-else.\n        if shifts == 0 {\n            item\n        } else if shifts == 1 {\n            item * TWO_POW_8\n        } else if shifts == 2 {\n            item * TWO_POW_16\n        } else if shifts == 3 {\n            item * TWO_POW_24\n        } else {\n            // Doesn't make sense, but it's most likely called on 0 anyway.\n            0\n        }\n    }\n}\n\n// Shift by 8 bits to the right between 0 and 4 times.\n// Checks `is_unconstrained()` to just use a bitshift if we're running in an unconstrained context,\n// otherwise divides by 256.\nfn rshift8(item: u32, shifts: u8) -> u32 {\n    if is_unconstrained() {\n        item >> (8 * shifts)\n    } else {\n        // Division wouldn't work on `Field`.\n        if shifts == 0 {\n            item\n        } else if shifts == 1 {\n            item / TWO_POW_8\n        } else if shifts == 2 {\n            item / TWO_POW_16\n        } else if shifts == 3 {\n            item / TWO_POW_24\n        } else {\n            0\n        }\n    }\n}\n\n// Zero out all bytes between the end of the message and where the length is appended,\n// then write the length into the last 8 bytes of the block.\nunconstrained fn attach_len_to_msg_block(\n    mut msg_block: MSG_BLOCK,\n    mut msg_byte_ptr: BLOCK_BYTE_PTR,\n    message_size: u32,\n) -> MSG_BLOCK {\n    // We assume that `msg_byte_ptr` is less than 57 because if not then it is reset to zero before calling this function.\n    // In any case, fill blocks up with zeros until the last 64 bits (i.e. until msg_byte_ptr = 56).\n    // There can be one item which has to be partially zeroed.\n    let modulo = msg_byte_ptr % INT_SIZE;\n    if modulo != 0 {\n        // Index of the block in which we find the item we need to partially zero.\n        let i = msg_byte_ptr / INT_SIZE;\n        let zeros = INT_SIZE - modulo;\n        msg_block[i] = set_item_zeros(msg_block[i], zeros as u8);\n        msg_byte_ptr = msg_byte_ptr + zeros;\n    }\n\n    // The rest can be zeroed without bit shifting anything.\n    for i in (msg_byte_ptr / INT_SIZE)..INT_SIZE_PTR {\n        msg_block[i] = 0;\n    }\n\n    // Set the last two 4 byte ints as the first/second half of the 8 bytes of the length.\n    let len = 8 * message_size;\n    let len_bytes: [u8; 8] = (len as Field).to_be_bytes();\n    for i in 0..=1 {\n        let shift = i * 4;\n        msg_block[INT_SIZE_PTR + i] = make_item(\n            len_bytes[shift],\n            len_bytes[shift + 1],\n            len_bytes[shift + 2],\n            len_bytes[shift + 3],\n        );\n    }\n    msg_block\n}\n\n// Verify that the message length was correctly written by `attach_len_to_msg_block`,\n// and that everything between the byte pointer and the size pointer was zeroed,\n// and that everything before the byte pointer was untouched.\nfn verify_msg_len(\n    msg_block: MSG_BLOCK,\n    last_block: MSG_BLOCK,\n    msg_byte_ptr: BLOCK_BYTE_PTR,\n    message_size: u32,\n) {\n    // Check zeros up to the size pointer.\n    verify_msg_block_zeros(msg_block, msg_byte_ptr, INT_SIZE_PTR);\n\n    // Check that up to the pointer we match the last block.\n    verify_msg_block_equals_last(msg_block, last_block, msg_byte_ptr);\n\n    // We verify the message length was inserted correctly by reversing the byte decomposition.\n    let mut reconstructed_len: u64 = 0;\n    for i in INT_SIZE_PTR..INT_BLOCK_SIZE {\n        reconstructed_len = reconstructed_len * TWO_POW_32;\n        reconstructed_len = reconstructed_len + msg_block[i] as u64;\n    }\n    let len = 8 * message_size as u64;\n    assert_eq(reconstructed_len, len);\n}\n\n// Perform the final compression, then transform the `STATE` into `HASH`.\nfn hash_final_block(msg_block: MSG_BLOCK, mut state: STATE) -> HASH {\n    let mut out_h: HASH = [0; 32]; // Digest as sequence of bytes\n    // Hash final padded block\n    state = sha256_compression(msg_block, state);\n\n    // Return final hash as byte array\n    for j in 0..8 {\n        let h_bytes: [u8; 4] = (state[j] as Field).to_be_bytes();\n        for k in 0..4 {\n            out_h[4 * j + k] = h_bytes[k];\n        }\n    }\n\n    out_h\n}\n\nmod tests {\n    use super::{\n        attach_len_to_msg_block, build_msg_block, byte_into_item, get_item_byte, make_item,\n        set_item_byte_then_zeros, set_item_zeros,\n    };\n    use super::INT_BLOCK;\n    use super::sha256_var;\n\n    #[test]\n    fn smoke_test() {\n        let input = [0xbd];\n        let result = [\n            0x68, 0x32, 0x57, 0x20, 0xaa, 0xbd, 0x7c, 0x82, 0xf3, 0x0f, 0x55, 0x4b, 0x31, 0x3d,\n            0x05, 0x70, 0xc9, 0x5a, 0xcc, 0xbb, 0x7d, 0xc4, 0xb5, 0xaa, 0xe1, 0x12, 0x04, 0xc0,\n            0x8f, 0xfe, 0x73, 0x2b,\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn msg_just_over_block() {\n        let input = [\n            102, 114, 111, 109, 58, 114, 117, 110, 110, 105, 101, 114, 46, 108, 101, 97, 103, 117,\n            101, 115, 46, 48, 106, 64, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 13, 10, 99,\n            111, 110, 116, 101, 110, 116, 45, 116, 121, 112, 101, 58, 116, 101, 120, 116, 47, 112,\n            108, 97, 105, 110, 59, 32, 99, 104, 97, 114, 115, 101, 116,\n        ];\n        let result = [\n            91, 122, 146, 93, 52, 109, 133, 148, 171, 61, 156, 70, 189, 238, 153, 7, 222, 184, 94,\n            24, 65, 114, 192, 244, 207, 199, 87, 232, 192, 224, 171, 207,\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn msg_multiple_over_block() {\n        let input = [\n            102, 114, 111, 109, 58, 114, 117, 110, 110, 105, 101, 114, 46, 108, 101, 97, 103, 117,\n            101, 115, 46, 48, 106, 64, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 13, 10, 99,\n            111, 110, 116, 101, 110, 116, 45, 116, 121, 112, 101, 58, 116, 101, 120, 116, 47, 112,\n            108, 97, 105, 110, 59, 32, 99, 104, 97, 114, 115, 101, 116, 61, 117, 115, 45, 97, 115,\n            99, 105, 105, 13, 10, 109, 105, 109, 101, 45, 118, 101, 114, 115, 105, 111, 110, 58, 49,\n            46, 48, 32, 40, 77, 97, 99, 32, 79, 83, 32, 88, 32, 77, 97, 105, 108, 32, 49, 54, 46,\n            48, 32, 92, 40, 51, 55, 51, 49, 46, 53, 48, 48, 46, 50, 51, 49, 92, 41, 41, 13, 10, 115,\n            117, 98, 106, 101, 99, 116, 58, 72, 101, 108, 108, 111, 13, 10, 109, 101, 115, 115, 97,\n            103, 101, 45, 105, 100, 58, 60, 56, 70, 56, 49, 57, 68, 51, 50, 45, 66, 54, 65, 67, 45,\n            52, 56, 57, 68, 45, 57, 55, 55, 70, 45, 52, 51, 56, 66, 66, 67, 52, 67, 65, 66, 50, 55,\n            64, 109, 101, 46, 99, 111, 109, 62, 13, 10, 100, 97, 116, 101, 58, 83, 97, 116, 44, 32,\n            50, 54, 32, 65, 117, 103, 32, 50, 48, 50, 51, 32, 49, 50, 58, 50, 53, 58, 50, 50, 32,\n            43, 48, 52, 48, 48, 13, 10, 116, 111, 58, 122, 107, 101, 119, 116, 101, 115, 116, 64,\n            103, 109, 97, 105, 108, 46, 99, 111, 109, 13, 10, 100, 107, 105, 109, 45, 115, 105, 103,\n            110, 97, 116, 117, 114, 101, 58, 118, 61, 49, 59, 32, 97, 61, 114, 115, 97, 45, 115,\n            104, 97, 50, 53, 54, 59, 32, 99, 61, 114, 101, 108, 97, 120, 101, 100, 47, 114, 101,\n            108, 97, 120, 101, 100, 59, 32, 100, 61, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109,\n            59, 32, 115, 61, 49, 97, 49, 104, 97, 105, 59, 32, 116, 61, 49, 54, 57, 51, 48, 51, 56,\n            51, 51, 55, 59, 32, 98, 104, 61, 55, 120, 81, 77, 68, 117, 111, 86, 86, 85, 52, 109, 48,\n            87, 48, 87, 82, 86, 83, 114, 86, 88, 77, 101, 71, 83, 73, 65, 83, 115, 110, 117, 99, 75,\n            57, 100, 74, 115, 114, 99, 43, 118, 85, 61, 59, 32, 104, 61, 102, 114, 111, 109, 58, 67,\n            111, 110, 116, 101, 110, 116, 45, 84, 121, 112, 101, 58, 77, 105, 109, 101, 45, 86, 101,\n            114, 115, 105, 111, 110, 58, 83, 117, 98, 106, 101, 99,\n        ];\n        let result = [\n            116, 90, 151, 31, 78, 22, 138, 180, 211, 189, 69, 76, 227, 200, 155, 29, 59, 123, 154,\n            60, 47, 153, 203, 129, 157, 251, 48, 2, 79, 11, 65, 47,\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn msg_just_under_block() {\n        let input = [\n            102, 114, 111, 109, 58, 114, 117, 110, 110, 105, 101, 114, 46, 108, 101, 97, 103, 117,\n            101, 115, 46, 48, 106, 64, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 13, 10, 99,\n            111, 110, 116, 101, 110, 116, 45, 116, 121, 112, 101, 58, 116, 101, 120, 116, 47, 112,\n            108, 97, 105, 110, 59,\n        ];\n        let result = [\n            143, 140, 76, 173, 222, 123, 102, 68, 70, 149, 207, 43, 39, 61, 34, 79, 216, 252, 213,\n            165, 74, 16, 110, 74, 29, 64, 138, 167, 30, 1, 9, 119,\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn msg_big_not_block_multiple() {\n        let input = [\n            102, 114, 111, 109, 58, 114, 117, 110, 110, 105, 101, 114, 46, 108, 101, 97, 103, 117,\n            101, 115, 46, 48, 106, 64, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 13, 10, 99,\n            111, 110, 116, 101, 110, 116, 45, 116, 121, 112, 101, 58, 116, 101, 120, 116, 47, 112,\n            108, 97, 105, 110, 59, 32, 99, 104, 97, 114, 115, 101, 116, 61, 117, 115, 45, 97, 115,\n            99, 105, 105, 13, 10, 109, 105, 109, 101, 45, 118, 101, 114, 115, 105, 111, 110, 58, 49,\n            46, 48, 32, 40, 77, 97, 99, 32, 79, 83, 32, 88, 32, 77, 97, 105, 108, 32, 49, 54, 46,\n            48, 32, 92, 40, 51, 55, 51, 49, 46, 53, 48, 48, 46, 50, 51, 49, 92, 41, 41, 13, 10, 115,\n            117, 98, 106, 101, 99, 116, 58, 72, 101, 108, 108, 111, 13, 10, 109, 101, 115, 115, 97,\n            103, 101, 45, 105, 100, 58, 60, 56, 70, 56, 49, 57, 68, 51, 50, 45, 66, 54, 65, 67, 45,\n            52, 56, 57, 68, 45, 57, 55, 55, 70, 45, 52, 51, 56, 66, 66, 67, 52, 67, 65, 66, 50, 55,\n            64, 109, 101, 46, 99, 111, 109, 62, 13, 10, 100, 97, 116, 101, 58, 83, 97, 116, 44, 32,\n            50, 54, 32, 65, 117, 103, 32, 50, 48, 50, 51, 32, 49, 50, 58, 50, 53, 58, 50, 50, 32,\n            43, 48, 52, 48, 48, 13, 10, 116, 111, 58, 122, 107, 101, 119, 116, 101, 115, 116, 64,\n            103, 109, 97, 105, 108, 46, 99, 111, 109, 13, 10, 100, 107, 105, 109, 45, 115, 105, 103,\n            110, 97, 116, 117, 114, 101, 58, 118, 61, 49, 59, 32, 97, 61, 114, 115, 97, 45, 115,\n            104, 97, 50, 53, 54, 59, 32, 99, 61, 114, 101, 108, 97, 120, 101, 100, 47, 114, 101,\n            108, 97, 120, 101, 100, 59, 32, 100, 61, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109,\n            59, 32, 115, 61, 49, 97, 49, 104, 97, 105, 59, 32, 116, 61, 49, 54, 57, 51, 48, 51, 56,\n            51, 51, 55, 59, 32, 98, 104, 61, 55, 120, 81, 77, 68, 117, 111, 86, 86, 85, 52, 109, 48,\n            87, 48, 87, 82, 86, 83, 114, 86, 88, 77, 101, 71, 83, 73, 65, 83, 115, 110, 117, 99, 75,\n            57, 100, 74, 115, 114, 99, 43, 118, 85, 61, 59, 32, 104, 61, 102, 114, 111, 109, 58, 67,\n            111, 110, 116, 101, 110, 116, 45, 84, 121, 112, 101, 58, 77, 105, 109, 101, 45, 86, 101,\n            114, 115, 105, 111, 110, 58, 83, 117, 98, 106, 101, 99, 116, 58, 77, 101, 115, 115, 97,\n            103, 101, 45, 73, 100, 58, 68, 97, 116, 101, 58, 116, 111, 59, 32, 98, 61,\n        ];\n        let result = [\n            112, 144, 73, 182, 208, 98, 9, 238, 54, 229, 61, 145, 222, 17, 72, 62, 148, 222, 186,\n            55, 192, 82, 220, 35, 66, 47, 193, 200, 22, 38, 26, 186,\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn msg_big_with_padding() {\n        let input = [\n            48, 130, 1, 37, 2, 1, 0, 48, 11, 6, 9, 96, 134, 72, 1, 101, 3, 4, 2, 1, 48, 130, 1, 17,\n            48, 37, 2, 1, 1, 4, 32, 176, 223, 31, 133, 108, 84, 158, 102, 70, 11, 165, 175, 196, 12,\n            201, 130, 25, 131, 46, 125, 156, 194, 28, 23, 55, 133, 157, 164, 135, 136, 220, 78, 48,\n            37, 2, 1, 2, 4, 32, 190, 82, 180, 235, 222, 33, 79, 50, 152, 136, 142, 35, 116, 224, 6,\n            242, 156, 141, 128, 248, 10, 61, 98, 86, 248, 45, 207, 210, 90, 232, 175, 38, 48, 37, 2,\n            1, 3, 4, 32, 0, 194, 104, 108, 237, 246, 97, 230, 116, 198, 69, 110, 26, 87, 17, 89,\n            110, 199, 108, 250, 36, 21, 39, 87, 110, 102, 250, 213, 174, 131, 171, 174, 48, 37, 2,\n            1, 11, 4, 32, 136, 155, 87, 144, 111, 15, 152, 127, 85, 25, 154, 81, 20, 58, 51, 75,\n            193, 116, 234, 0, 60, 30, 29, 30, 183, 141, 72, 247, 255, 203, 100, 124, 48, 37, 2, 1,\n            12, 4, 32, 41, 234, 106, 78, 31, 11, 114, 137, 237, 17, 92, 71, 134, 47, 62, 78, 189,\n            233, 201, 214, 53, 4, 47, 189, 201, 133, 6, 121, 34, 131, 64, 142, 48, 37, 2, 1, 13, 4,\n            32, 91, 222, 210, 193, 62, 222, 104, 82, 36, 41, 138, 253, 70, 15, 148, 208, 156, 45,\n            105, 171, 241, 195, 185, 43, 217, 162, 146, 201, 222, 89, 238, 38, 48, 37, 2, 1, 14, 4,\n            32, 76, 123, 216, 13, 51, 227, 72, 245, 59, 193, 238, 166, 103, 49, 23, 164, 171, 188,\n            194, 197, 156, 187, 249, 28, 198, 95, 69, 15, 182, 56, 54, 38, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        ];\n        let result = [\n            32, 85, 108, 174, 127, 112, 178, 182, 8, 43, 134, 123, 192, 211, 131, 66, 184, 240, 212,\n            181, 240, 180, 106, 195, 24, 117, 54, 129, 19, 10, 250, 53,\n        ];\n        let message_size = 297;\n        assert_eq(sha256_var(input, message_size), result);\n    }\n\n    #[test]\n    fn msg_big_no_padding() {\n        let input = [\n            48, 130, 1, 37, 2, 1, 0, 48, 11, 6, 9, 96, 134, 72, 1, 101, 3, 4, 2, 1, 48, 130, 1, 17,\n            48, 37, 2, 1, 1, 4, 32, 176, 223, 31, 133, 108, 84, 158, 102, 70, 11, 165, 175, 196, 12,\n            201, 130, 25, 131, 46, 125, 156, 194, 28, 23, 55, 133, 157, 164, 135, 136, 220, 78, 48,\n            37, 2, 1, 2, 4, 32, 190, 82, 180, 235, 222, 33, 79, 50, 152, 136, 142, 35, 116, 224, 6,\n            242, 156, 141, 128, 248, 10, 61, 98, 86, 248, 45, 207, 210, 90, 232, 175, 38, 48, 37, 2,\n            1, 3, 4, 32, 0, 194, 104, 108, 237, 246, 97, 230, 116, 198, 69, 110, 26, 87, 17, 89,\n            110, 199, 108, 250, 36, 21, 39, 87, 110, 102, 250, 213, 174, 131, 171, 174, 48, 37, 2,\n            1, 11, 4, 32, 136, 155, 87, 144, 111, 15, 152, 127, 85, 25, 154, 81, 20, 58, 51, 75,\n            193, 116, 234, 0, 60, 30, 29, 30, 183, 141, 72, 247, 255, 203, 100, 124, 48, 37, 2, 1,\n            12, 4, 32, 41, 234, 106, 78, 31, 11, 114, 137, 237, 17, 92, 71, 134, 47, 62, 78, 189,\n            233, 201, 214, 53, 4, 47, 189, 201, 133, 6, 121, 34, 131, 64, 142, 48, 37, 2, 1, 13, 4,\n            32, 91, 222, 210, 193, 62, 222, 104, 82, 36, 41, 138, 253, 70, 15, 148, 208, 156, 45,\n            105, 171, 241, 195, 185, 43, 217, 162, 146, 201, 222, 89, 238, 38, 48, 37, 2, 1, 14, 4,\n            32, 76, 123, 216, 13, 51, 227, 72, 245, 59, 193, 238, 166, 103, 49, 23, 164, 171, 188,\n            194, 197, 156, 187, 249, 28, 198, 95, 69, 15, 182, 56, 54, 38,\n        ];\n        let result = [\n            32, 85, 108, 174, 127, 112, 178, 182, 8, 43, 134, 123, 192, 211, 131, 66, 184, 240, 212,\n            181, 240, 180, 106, 195, 24, 117, 54, 129, 19, 10, 250, 53,\n        ];\n        assert_eq(sha256_var(input, input.len() as u64), result);\n    }\n\n    #[test]\n    fn same_msg_len_variable_padding() {\n        let input = [\n            29, 81, 165, 84, 243, 114, 101, 37, 242, 146, 127, 99, 69, 145, 39, 72, 213, 39, 253,\n            179, 218, 37, 217, 201, 172, 93, 198, 50, 249, 70, 15, 30, 162, 112, 187, 40, 140, 9,\n            236, 53, 32, 44, 38, 163, 113, 254, 192, 197, 44, 89, 71, 130, 169, 242, 17, 211, 214,\n            72, 19, 178, 186, 168, 147, 127, 99, 101, 252, 227, 8, 147, 150, 85, 97, 158, 17, 107,\n            218, 244, 82, 113, 247, 91, 208, 214, 60, 244, 87, 137, 173, 201, 130, 18, 66, 56, 198,\n            149, 207, 189, 175, 120, 123, 224, 177, 167, 251, 159, 143, 110, 68, 183, 189, 70, 126,\n            32, 35, 164, 44, 30, 44, 12, 65, 18, 62, 239, 242, 2, 248, 104, 2, 178, 64, 28, 126, 36,\n            137, 24, 14, 116, 91, 98, 90, 159, 218, 102, 45, 11, 110, 223, 245, 184, 52, 99, 59,\n            245, 136, 175, 3, 72, 164, 146, 145, 116, 22, 66, 24, 49, 193, 121, 3, 60, 37, 41, 97,\n            3, 190, 66, 195, 225, 63, 46, 3, 118, 4, 208, 15, 1, 40, 254, 235, 151, 123, 70, 180,\n            170, 44, 172, 90, 4, 254, 53, 239, 116, 246, 67, 56, 129, 61, 22, 169, 213, 65, 27, 216,\n            116, 162, 239, 214, 207, 126, 177, 20, 100, 25, 48, 143, 84, 215, 70, 197, 53, 65, 70,\n            86, 172, 61, 62, 9, 212, 167, 169, 133, 41, 126, 213, 196, 33, 192, 238, 0, 63, 246,\n            215, 58, 128, 110, 101, 92, 3, 170, 214, 130, 149, 52, 81, 125, 118, 233, 3, 118, 193,\n            104, 207, 120, 115, 77, 253, 191, 122, 0, 107, 164, 207, 113, 81, 169, 36, 201, 228, 74,\n            134, 131, 218, 178, 35, 30, 216, 101, 2, 103, 174, 87, 95, 50, 50, 215, 157, 5, 210,\n            188, 54, 211, 78, 45, 199, 96, 121, 241, 241, 176, 226, 194, 134, 130, 89, 217, 210,\n            186, 32, 140, 39, 91, 103, 212, 26, 87, 32, 72, 144, 228, 230, 117, 99, 188, 50, 15, 69,\n            79, 179, 50, 12, 106, 86, 218, 101, 73, 142, 243, 29, 250, 122, 228, 233, 29, 255, 22,\n            121, 114, 125, 103, 41, 250, 241, 179, 126, 158, 198, 116, 209, 65, 94, 98, 228, 175,\n            169, 96, 3, 9, 233, 133, 214, 55, 161, 164, 103, 80, 85, 24, 186, 64, 167, 92, 131, 53,\n            101, 202, 47, 25, 104, 118, 155, 14, 12, 12, 25, 116, 45, 221, 249, 28, 246, 212, 200,\n            157, 167, 169, 56, 197, 181, 4, 245, 146, 1, 140, 234, 191, 212, 228, 125, 87, 81, 86,\n            119, 30, 63, 129, 143, 32, 96,\n        ];\n\n        // Prepare inputs of different lengths\n        let mut input_511 = [0; 511];\n        let mut input_512 = [0; 512]; // Next block\n        let mut input_575 = [0; 575];\n        let mut input_576 = [0; 576]; // Next block\n        for i in 0..input.len() {\n            input_511[i] = input[i];\n            input_512[i] = input[i];\n            input_575[i] = input[i];\n            input_576[i] = input[i];\n        }\n\n        // Compute hashes of all inputs (with same message length)\n        let fixed_length_hash = super::sha256(input);\n        let var_full_length_hash = sha256_var(input, input.len() as u64);\n        let var_length_hash_511 = sha256_var(input_511, input.len() as u64);\n        let var_length_hash_512 = sha256_var(input_512, input.len() as u64);\n        let var_length_hash_575 = sha256_var(input_575, input.len() as u64);\n        let var_length_hash_576 = sha256_var(input_576, input.len() as u64);\n\n        // All of the above should have produced the same hash\n        assert_eq(var_full_length_hash, fixed_length_hash);\n        assert_eq(var_length_hash_511, fixed_length_hash);\n        assert_eq(var_length_hash_512, fixed_length_hash);\n        assert_eq(var_length_hash_575, fixed_length_hash);\n        assert_eq(var_length_hash_576, fixed_length_hash);\n    }\n\n    #[test]\n    fn test_get_item_byte() {\n        let fld = make_item(10, 20, 30, 40);\n        assert_eq(fld, 0x0a141e28);\n        assert_eq(get_item_byte(fld, 0), 10);\n        assert_eq(get_item_byte(fld, 4), 10);\n        assert_eq(get_item_byte(fld, 6), 30);\n    }\n\n    #[test]\n    fn test_byte_into_item() {\n        let fld = make_item(0, 20, 0, 0);\n        assert_eq(byte_into_item(20, 1), fld);\n        assert_eq(byte_into_item(20, 5), fld);\n    }\n\n    #[test]\n    fn test_set_item_zeros() {\n        let fld0 = make_item(10, 20, 30, 40);\n        let fld1 = make_item(10, 0, 0, 0);\n        assert_eq(set_item_zeros(fld0, 3), fld1);\n        assert_eq(set_item_zeros(fld0, 4), 0);\n        assert_eq(set_item_zeros(0, 4), 0);\n    }\n\n    #[test]\n    fn test_set_item_byte_then_zeros() {\n        let fld0 = make_item(10, 20, 30, 40);\n        let fld1 = make_item(10, 50, 0, 0);\n        assert_eq(set_item_byte_then_zeros(fld0, 1, 50), fld1);\n    }\n\n    #[test]\n    fn test_build_msg_block_start_0() {\n        let input = [\n            102, 114, 111, 109, 58, 114, 117, 110, 110, 105, 101, 114, 46, 108, 101, 97, 103, 117,\n            101, 115, 46, 48,\n        ];\n        assert_eq(input.len(), 22);\n        let (msg_block, msg_byte_ptr) = unsafe { build_msg_block(input, input.len(), 0) };\n        assert_eq(msg_byte_ptr, input.len());\n        assert_eq(msg_block[0], make_item(input[0], input[1], input[2], input[3]));\n        assert_eq(msg_block[1], make_item(input[4], input[5], input[6], input[7]));\n        assert_eq(msg_block[5], make_item(input[20], input[21], 0, 0));\n        assert_eq(msg_block[6], 0);\n    }\n\n    #[test]\n    fn test_build_msg_block_start_1() {\n        let input = [\n            102, 114, 111, 109, 58, 114, 117, 110, 110, 105, 101, 114, 46, 108, 101, 97, 103, 117,\n            101, 115, 46, 48, 106, 64, 105, 99, 108, 111, 117, 100, 46, 99, 111, 109, 13, 10, 99,\n            111, 110, 116, 101, 110, 116, 45, 116, 121, 112, 101, 58, 116, 101, 120, 116, 47, 112,\n            108, 97, 105, 110, 59, 32, 99, 104, 97, 114, 115, 101, 116,\n        ];\n        assert_eq(input.len(), 68);\n        let (msg_block, msg_byte_ptr) = unsafe { build_msg_block(input, input.len(), 64) };\n        assert_eq(msg_byte_ptr, 4);\n        assert_eq(msg_block[0], make_item(input[64], input[65], input[66], input[67]));\n        assert_eq(msg_block[1], 0);\n    }\n\n    #[test]\n    fn test_attach_len_to_msg_block() {\n        let input: INT_BLOCK = [\n            2152555847, 1397309779, 1936618851, 1262052426, 1936876331, 1985297723, 543702374,\n            1919905082, 1131376244, 1701737517, 1417244773, 978151789, 1697470053, 1920166255,\n            1849316213, 1651139939,\n        ];\n        let msg_block = unsafe { attach_len_to_msg_block(input, 1, 448) };\n        assert_eq(msg_block[0], ((1 << 7) as u32) * 256 * 256 * 256);\n        assert_eq(msg_block[1], 0);\n        assert_eq(msg_block[15], 3584);\n    }\n}\n", "path": "std/hash/sha256.nr" }, "36": { "source": "pub mod hash;\npub mod aes128;\npub mod array;\npub mod slice;\npub mod merkle;\npub mod schnorr;\npub mod ecdsa_secp256k1;\npub mod ecdsa_secp256r1;\npub mod eddsa;\npub mod embedded_curve_ops;\npub mod sha256;\npub mod sha512;\npub mod field;\npub mod ec;\npub mod collections;\npub mod compat;\npub mod convert;\npub mod option;\npub mod string;\npub mod test;\npub mod cmp;\npub mod ops;\npub mod default;\npub mod prelude;\npub mod uint128;\npub mod bigint;\npub mod runtime;\npub mod meta;\npub mod append;\npub mod mem;\npub mod panic;\n\n// Oracle calls are required to be wrapped in an unconstrained function\n// Thus, the only argument to the `println` oracle is expected to always be an ident\n#[oracle(print)]\nunconstrained fn print_oracle<T>(with_newline: bool, input: T) {}\n\nunconstrained fn print_unconstrained<T>(with_newline: bool, input: T) {\n    print_oracle(with_newline, input);\n}\n\npub fn println<T>(input: T) {\n    unsafe {\n        print_unconstrained(true, input);\n    }\n}\n\npub fn print<T>(input: T) {\n    unsafe {\n        print_unconstrained(false, input);\n    }\n}\n\npub fn verify_proof<let N: u32, let M: u32, let K: u32>(\n    verification_key: [Field; N],\n    proof: [Field; M],\n    public_inputs: [Field; K],\n    key_hash: Field,\n) {\n    verify_proof_internal(verification_key, proof, public_inputs, key_hash, 0);\n}\n\npub fn verify_proof_with_type<let N: u32, let M: u32, let K: u32>(\n    verification_key: [Field; N],\n    proof: [Field; M],\n    public_inputs: [Field; K],\n    key_hash: Field,\n    proof_type: u32,\n) {\n    if !crate::runtime::is_unconstrained() {\n        crate::assert_constant(proof_type);\n    }\n    verify_proof_internal(verification_key, proof, public_inputs, key_hash, proof_type);\n}\n\n#[foreign(recursive_aggregation)]\nfn verify_proof_internal<let N: u32, let M: u32, let K: u32>(\n    verification_key: [Field; N],\n    proof: [Field; M],\n    public_inputs: [Field; K],\n    key_hash: Field,\n    proof_type: u32,\n) {}\n\n// Asserts that the given value is known at compile-time.\n// Useful for debugging for-loop bounds.\n#[builtin(assert_constant)]\npub fn assert_constant<T>(x: T) {}\n\n// Asserts that the given value is both true and known at compile-time\n#[builtin(static_assert)]\npub fn static_assert<let N: u32>(predicate: bool, message: str<N>) {}\n\n// from_field and as_field are private since they are not valid for every type.\n// `as` should be the default for users to cast between primitive types, and in the future\n// traits can be used to work with generic types.\n#[builtin(from_field)]\nfn from_field<T>(x: Field) -> T {}\n\n#[builtin(as_field)]\nfn as_field<T>(x: T) -> Field {}\n\npub fn wrapping_add<T>(x: T, y: T) -> T {\n    crate::from_field(crate::as_field(x) + crate::as_field(y))\n}\n\npub fn wrapping_sub<T>(x: T, y: T) -> T {\n    //340282366920938463463374607431768211456 is 2^128, it is used to avoid underflow\n    crate::from_field(\n        crate::as_field(x) + 340282366920938463463374607431768211456 - crate::as_field(y),\n    )\n}\n\npub fn wrapping_mul<T>(x: T, y: T) -> T {\n    crate::from_field(crate::as_field(x) * crate::as_field(y))\n}\n\n#[builtin(as_witness)]\npub fn as_witness(x: Field) {}\n\n", "path": "std/lib.nr" }, "69": { "source": "use dep::rsa::{rsa::verify_sha256_pkcs1v15, types::RBN2048};\nuse dep::bignum::{params::BigNumParams, RuntimeBigNum};\nuse crate::{RSA_EXPONENT, QRData, LIMBS_SIZE};\nuse std::hash::sha256::sha256_var;\n\nglobal TWO_POW_120: Field = 1329227995784915872903807060280344576;\n\n/// Compresses public key limbs by combining pairs of elements\n/// This is safe because the result is max 240 bits, well within Default backend Field size is 254-bits\n/// Each pair is combined as: first + (2^120 * second)\nfn compress_pubkey(pub_key: [Field; LIMBS_SIZE]) -> [Field; LIMBS_SIZE / 2] {\n    let mut compressed = [0; LIMBS_SIZE / 2];\n    for i in 0..(LIMBS_SIZE / 2) {\n        let idx = i * 2;\n        compressed[i] = pub_key[idx] + (TWO_POW_120 * pub_key[idx + 1]);\n    }\n\n    compressed\n}\n\n/// Verifies the signature of the QR data\npub fn verify_signature(\n    qrDataPadded: QRData,\n    qrDataPaddedLength: u32,\n    signature_limbs: [Field; LIMBS_SIZE],\n    modulus_limbs: [Field; LIMBS_SIZE],\n    redc_limbs: [Field; LIMBS_SIZE],\n) -> Field {\n    let sha = sha256_var(qrDataPadded.storage, qrDataPaddedLength as u64);\n    let has_multiplicative_inverse = false;\n    let params: BigNumParams<18, 2048> =\n        BigNumParams::new(has_multiplicative_inverse, modulus_limbs, redc_limbs);\n\n    let signature: RBN2048 = RuntimeBigNum::from_array(params, signature_limbs);\n\n    // posideon hash of compressed public key\n    assert(verify_sha256_pkcs1v15(sha, signature, RSA_EXPONENT));\n\n    10\n\n    // let compressed_pub_key = compress_pubkey(modulus_limbs);\n    // let pubkey_hash = std::hash::poseidon::bn254::hash_9(compressed_pub_key);\n\n    // pubkey_hash\n}\n", "path": "/Users/saleel/Aztec/anon-aadhaar-noir/circuits/src/signature_verifier/mod.nr" }, "76": { "source": "pub mod helpers;\nmod tests;\nmod signature_verifier;\nuse helpers::{extractor::extractor, nullifier::nullifier_circuit, signal::signal_circuit};\nuse signature_verifier::verify_signature;\n\nglobal RSA_EXPONENT: u32 = 65537;\nglobal MAX_YEARS: u32 = 2032;\nglobal INCLUDE_HOURS: bool = true;\nglobal INCLUDE_MINUTES: bool = false;\nglobal INCLUDE_SECONDS: bool = false;\nglobal MAX_DATA_LENGTH: u32 = 1100;\nglobal DELIMITER_INDICES_LENGTH: u32 = 18;\nglobal LIMBS_SIZE: u32 = 18;\nglobal IST_OFFSET: Field = 19800;\nglobal MAX_FIELD_BYTE_SIZE: u32 = 32;\nglobal MAX_BYTES_IN_FIELD: u32 = 31;\nglobal MAX_PHOTO_BYTES: u32 = MAX_BYTES_IN_FIELD * MAX_FIELD_BYTE_SIZE;\n\ntype QRData = BoundedVec<u8, MAX_DATA_LENGTH>;\n\npub struct RevealedData {\n    age: bool,\n    gender: u32,\n    pincode: u32,\n    state: Field,\n    timestamp: Field,\n    nullifier: Field,\n    pubkey_hash: Field,\n}\n\n// circuit size: 237811\npub fn main(\n    qrDataPadded: QRData,\n    qrDataPaddedLength: u32,\n    delimiterIndices: [u8; DELIMITER_INDICES_LENGTH],\n    signature_limbs: [Field; LIMBS_SIZE],\n    modulus_limbs: [Field; LIMBS_SIZE],\n    redc_limbs: [Field; LIMBS_SIZE],\n    revealAgeAbove18: bool,\n    revealGender: bool,\n    revealPinCode: bool,\n    revealState: bool,\n    nullifierSeed: Field,\n    signalHash: Field,\n) -> pub RevealedData {\n    // Signature verification and pubkey hash extraction\n    // 1,80,860 Gates\n    let pubkey_hash = verify_signature(\n        qrDataPadded,\n        qrDataPaddedLength,\n        signature_limbs,\n        modulus_limbs,\n        redc_limbs,\n    );\n\n    // Extracting data from QR code\n    // 46829 Gates\n    // let AadharData = extractor(qrDataPadded, qrDataPaddedLength, delimiterIndices);\n\n    // // Selective Disclosure\n    // let ageAbove18 = AadharData.age > 18;\n    // let outputAge = if revealAgeAbove18 { ageAbove18 } else { false };\n    // let outputGender = if revealGender { AadharData.gender } else { 0 };\n    // let outputPinCode = if revealPinCode { AadharData.pincode } else { 0 };\n    // let outputState = if revealState { AadharData.state } else { 0 };\n\n    // // Nullifier\n    // let nullifier = nullifier_circuit(nullifierSeed, AadharData.photo);\n\n    // Signal\n    // let signalHashSq = signalHash * signalHash;\n    // signal_circuit(signalHash, signalHashSq);\n\n    RevealedData {\n        age: false,\n        gender: 1,\n        pincode: 1,\n        state: 1,\n        timestamp: 1,\n        nullifier: 1,\n        pubkey_hash,\n    }\n}\n\n", "path": "/Users/saleel/Aztec/anon-aadhaar-noir/circuits/src/main.nr" }, "78": { "source": "use crate::utils::u60_representation::U60Repr;\n\npub struct BigNumParams<let N: u32, let MOD_BITS: u32> {\n    pub has_multiplicative_inverse: bool,\n\n    // @brief modulus: all BigNum operations are evaluated modulo this value\n    pub modulus: [Field; N],\n\n    // @brief modulus but represented in a U60Repr form\n    pub modulus_u60: U60Repr<N, 2>,\n    pub modulus_u60_x4: U60Repr<N, 4>,\n\n    // @brief double_modulus: used when performing negations and subtractions\n    pub double_modulus: [Field; N],\n\n    // @brief redc_param used for __barrett_reduction. See https://en.wikipedia.org/wiki/Barrett_reduction\n    pub redc_param: [Field; N],\n}\n\n// To be implemented by the user for any BigNum they define, or within the predefined BigNums in the `fields/` dir.\npub trait BigNumParamsGetter<let N: u32, let MOD_BITS: u32> {\n    pub fn get_params() -> BigNumParams<N, MOD_BITS>;\n}\n\nimpl<let N: u32, let MOD_BITS: u32> BigNumParams<N, MOD_BITS> {\n    pub fn new(\n        has_multiplicative_inverse: bool,\n        modulus: [Field; N],\n        redc_param: [Field; N],\n    ) -> Self {\n        Self {\n            has_multiplicative_inverse,\n            modulus,\n            modulus_u60: U60Repr::from(modulus),\n            modulus_u60_x4: U60Repr::from(modulus),\n            double_modulus: get_double_modulus(modulus),\n            redc_param,\n        }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32> std::cmp::Eq for BigNumParams<N, MOD_BITS> {\n    fn eq(self, other: Self) -> bool {\n        (self.has_multiplicative_inverse == other.has_multiplicative_inverse)\n            & (self.modulus == other.modulus)\n            & (self.modulus_u60 == other.modulus_u60)\n            & (self.modulus_u60_x4 == other.modulus_u60_x4)\n            & (self.double_modulus == other.double_modulus)\n            & (self.redc_param == other.redc_param)\n    }\n}\n\nfn get_double_modulus<let N: u32>(modulus: [Field; N]) -> [Field; N] {\n    let TWO_POW_120: Field = 0x1000000000000000000000000000000;\n    let m: U60Repr<N, 2> = U60Repr::from(modulus);\n    let mut result: [Field; N] = U60Repr::into(m + m);\n\n    result[0] += TWO_POW_120;\n    for i in 1..N - 1 {\n        result[i] += (TWO_POW_120 - 1);\n    }\n    result[N - 1] -= 1;\n    result\n}\n", "path": "/Users/saleel/nargo/github.com/noir-lang/noir-bignumv0.4.1/src/params.nr" }, "79": { "source": "use crate::utils::split_bits;\n\nuse crate::fns::{\n    constrained_ops::validate_quotient_in_range, unconstrained_helpers::__barrett_reduction,\n};\nuse crate::params::BigNumParams as P;\n\n/**\n * In this file:\n *\n * __compute_quadratic_expression_with_borrow_flags\n * __add_linear_expression\n * __compute_quadratic_expression_product\n * __compute_quadratic_expression\n * evaluate_quadratic_expression\n */\n\n/**\n* @brief Given a degree-2 BigNum expression that is equal to 0 mod p, compute the quotient and borrow flags \n* @description The expression is of the form:\n*\n* \\sum_{i=0}^{NUM_PRODUCTS - 1} ((\\sum_{j=0}^{LHS_N-1}lhs[i][j]) * (\\sum_{j=0}^{RHS_N-1}rhs[i][j])) + \\sum_{i=0}^{ADD_N - 1}linear_terms[i] = quotient * modulus\n*\n* The intent is to capture an arbitrary degree-2 expression within the limitations of Noir (no efficient dynamically-sized vectors)\n*\n* When performing BigNum arithmetic, we want to represent desired BigNum operations in a way that minimizes the number of modular reductions that are required.\n* This can be achieved by minimizing the number of degree-2 relations required.\n*\n* The borrow flags describe whether individual Field limbs will underflow when evaluating the above relation.\n* For example, when computing the product a * b - q * p = 0, it is possible that:\n*      1. a[0]*b[0] - p[0]*q[0] = -2^{120}\n*      2. a[0]*b[1] + a[1]*b[0] - p[0]*q[1] - p[1]*q[0] = 1\n* In the above example, the value represented by these two limbs is zero despite each limb being nonzero.\n* In this case, to correctly constrain the result, we must add (at least) 2^{120} from the first limb and subtract 1 from the second.\n*\n* @param lhs_terms a 2D array of BigNum\n* @param lhs_flags a 2D array of sign flags\n* @param rhs_terms a 2D array of BigNum\n* @param rhs_flags a 2D array of sign flags\n* @param linear_terms an array of BigNum\n* @param linear_flags an array of sign flags\n**/\nunconstrained fn __compute_quadratic_expression_with_borrow_flags<let N: u32, let MOD_BITS: u32, let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n    params: P<N, MOD_BITS>,\n    lhs_terms: [[[Field; N]; LHS_N]; NUM_PRODUCTS],\n    lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n    rhs_terms: [[[Field; N]; RHS_N]; NUM_PRODUCTS],\n    rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n    linear_terms: [[Field; N]; ADD_N],\n    linear_flags: [bool; ADD_N],\n) -> ([Field; N], [Field; N], [Field; 2 * N]) {\n    // TODO, validate we do not overflow N2 when multiplying and N when adding\n    let mut mulout_p = __compute_quadratic_expression_product(\n        params,\n        lhs_terms,\n        lhs_flags,\n        rhs_terms,\n        rhs_flags,\n        linear_terms,\n        linear_flags,\n    );\n    let mut mulout_n: [Field; 2 * N] = [0; 2 * N];\n    let mut relation_result: [Field; 2 * N] = split_bits::__normalize_limbs(mulout_p, 2 * N);\n\n    let modulus: [Field; N] = params.modulus;\n    let modulus_bits = MOD_BITS;\n    let (quotient, remainder) = __barrett_reduction(\n        relation_result,\n        params.redc_param,\n        modulus_bits,\n        modulus,\n        params.modulus_u60_x4,\n    );\n    println(remainder);\n    assert(remainder == [0; N]);\n\n    for i in 0..N {\n        for j in 0..N {\n            mulout_n[i + j] += quotient[i] * modulus[j];\n        }\n    }\n\n    // compute borrow flags from mulout_p and mulout_n\n    let mut borrow_flags: [Field; 2 * N] = [0; 2 * N];\n    let borrow_shift: Field = 0x40000000000000000000000000000000000000000000000000000000000000; // 2^{246}\n    let borrow_carry: Field = 0x40000000000000000000000000000000; // 2^{246 - 120} = 2^{126}\n    let two_pow_120: Field = 0x1000000000000000000000000000000;\n    let downshift: Field = 1 / two_pow_120;\n\n    // determine whether we need to borrow from more significant limbs.\n    // initial limb is \"simple\" comparison operation\n    // TODO: check how expensive `lt` operator is w.r.t. witness generation\n    borrow_flags[0] = mulout_p[0].lt(mulout_n[0]) as Field;\n    // we have 2N - 2 borrow flags. The number of limbs from our product computation is 2N - 1\n    // and there is nothing to borrow against for the final limb.\n    let mut hi_bits = (mulout_p[0] - mulout_n[0] + (borrow_flags[0] * borrow_shift)) * downshift;\n    for i in 1..(N + N - 2) {\n        // compute the contribution from limb `i-1` that gets added into limb `i`, and add into limb `i`\n        // let hi_bits = (mulout_p.get(i - 1) - mulout_n.get(i - 1) + (borrow_flags.get(i - 1) * borrow_shift))\n        //     * downshift;\n        mulout_p[i] += hi_bits;\n\n        // determine whether negative limb values are greater than positive limb values\n        let underflow: Field =\n            mulout_p[i].lt(mulout_n[i] + (borrow_flags[i - 1] * borrow_carry)) as Field;\n        borrow_flags[i] = underflow;\n\n        hi_bits = (\n            mulout_p[i] - mulout_n[i] + (borrow_flags[i] * borrow_shift)\n                - (borrow_flags[i - 1] * borrow_carry)\n        )\n            * downshift;\n    }\n\n    (quotient, remainder, borrow_flags)\n}\n\n/**\n* @brief Computes the result of a linear combination of (possibly negative) BigNum values (unconstrained)\n**/\n// NOTE: modulus2 is structured such that all limbs will be greater than 0, even when subtracting.\n// To do this, when computing `p - x`, we ensure that each limb in `p` is greater than each limb in `x`.\n// We know that, for a valid bignum element, the limbs in `x` will be <2^{120}\n// Therefore each of the limbs in `p` (except the most significant) will borrow 2^{120} from the more significant limb.\n// Finally, to ensure we do not underflow in the most significant limb, we use `2p` instead of `p`\nunconstrained fn __add_linear_expression<let N: u32, let MOD_BITS: u32, let M: u32>(\n    params: P<N, MOD_BITS>,\n    x: [[Field; N]; M],\n    flags: [bool; M],\n) -> ([Field; N]) {\n    // TODO, validate we do not overflow N2 when multiplying and N when adding\n    let mut sum: [Field; N] = [0; N];\n    // TODO: ugly! Will fail if input array is empty\n    let modulus2: [Field; N] = params.double_modulus;\n    for i in 0..M {\n        if (flags[i]) {\n            for j in 0..N {\n                sum[j] = sum[j] + modulus2[j] - x[i][j];\n                // assert(x[i][j].lt(modulus2[j]));\n            }\n        } else {\n            for j in 0..N {\n                sum[j] = sum[j] + x[i][j];\n            }\n        }\n    }\n    // problem if we normalize when used in computing quotient\n    sum\n}\n\n/**\n* @brief computes the limb products of a quadratic expression\n* @details see __compute_quadratic_expression_with_borrow_flags for full description\n**/\nunconstrained fn __compute_quadratic_expression_product<let N: u32, let MOD_BITS: u32, let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n    params: P<N, MOD_BITS>,\n    lhs_terms: [[[Field; N]; LHS_N]; NUM_PRODUCTS],\n    lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n    rhs_terms: [[[Field; N]; RHS_N]; NUM_PRODUCTS],\n    rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n    linear_terms: [[Field; N]; ADD_N],\n    linear_flags: [bool; ADD_N],\n) -> [Field; 2 * N] {\n    // TODO, validate we do not overflow N2 when multiplying and N when adding\n    let mut lhs: [[Field; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n    let mut rhs: [[Field; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n    let mut add: [Field; N] = [0; N];\n\n    for i in 0..NUM_PRODUCTS {\n        lhs[i] = __add_linear_expression(params, lhs_terms[i], lhs_flags[i]);\n        rhs[i] = __add_linear_expression(params, rhs_terms[i], rhs_flags[i]);\n    }\n\n    let add: [Field; N] = __add_linear_expression(params, linear_terms, linear_flags);\n\n    let mut mulout: [Field; 2 * N] = [0; 2 * N];\n\n    for i in 0..N {\n        for j in 0..N {\n            for k in 0..NUM_PRODUCTS {\n                mulout[i + j] += (lhs[k][i] * rhs[k][j]);\n            }\n        }\n        mulout[i] += add[i];\n    }\n    mulout\n}\n\n/**\n* @brief computes the quotient/remainder of a quadratic expression\n* @details see __compute_quadratic_expression_with_borrow_flags for full description\n**/\npub(crate) unconstrained fn __compute_quadratic_expression<let N: u32, let MOD_BITS: u32, let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n    params: P<N, MOD_BITS>,\n    lhs_terms: [[[Field; N]; LHS_N]; NUM_PRODUCTS],\n    lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n    rhs_terms: [[[Field; N]; RHS_N]; NUM_PRODUCTS],\n    rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n    linear_terms: [[Field; N]; ADD_N],\n    linear_flags: [bool; ADD_N],\n) -> ([Field; N], [Field; N]) {\n    // TODO, validate we do not overflow N2 when multiplying and N when adding\n    let mulout = __compute_quadratic_expression_product(\n        params,\n        lhs_terms,\n        lhs_flags,\n        rhs_terms,\n        rhs_flags,\n        linear_terms,\n        linear_flags,\n    );\n    let mut relation_result: [Field; 2 * N] = split_bits::__normalize_limbs(mulout, 2 * N);\n\n    // size 4\n    // a[3] * b[3] = a[6] = 7\n    // TODO: ugly! Will fail if input slice is empty\n    let k = MOD_BITS;\n\n    let (quotient, remainder) = __barrett_reduction(\n        relation_result,\n        params.redc_param,\n        k,\n        params.modulus,\n        params.modulus_u60_x4,\n    );\n\n    let mut q = quotient;\n    let mut r = remainder;\n    (q, r)\n}\n\n/**\n* @brief Constrain a degree-2 BigNum expression to be equal to 0 modulo self.modulus\n* @description The expression is of the form (when evaluated as an integer relation):\n*\n* \\sum_{i=0}^{NUM_PRODUCTS - 1} ((\\sum_{j=0}^{LHS_N-1}lhs[i][j]) * (\\sum_{j=0}^{RHS_N-1}rhs[i][j])) + \\sum_{i=0}^{ADD_N - 1}linear_terms[i] - quotient * modulus = 0\n*\n* The intent is to capture an arbitrary degree-2 expression within the limitations of Noir (no efficient dynamically-sized vectors)\n*\n* Note: this method requires the remainder term of the expression to be ZERO\n* When performing BigNum arithmetic, we want to represent desired BigNum operations in a way that minimizes the number of modular reductions that are required.\n* This can be achieved by minimizing the number of degree-2 relations required.\n*\n* The expensive parts of this algorithm are the following:\n*      1. evaluating the limb products required to compute `lhs * rhs`\n*      2. applying range constraints to validate the result is 0\n*\n* Range constraints are needed for the following reason:\n* When evaluating the above expression over N-limb BigNum objects, the result will consist of 2N - 1 limbs.\n* Each limb will be in the range [0, ..., 2^{240 + twiddle_factor} - 1] (twiddle_factor needs to be less than 6).\n* Because of the subtractions, the limbs may underflow and represent NEGATIVE values.\n* To account for this, we allow the Prover to borrow values from more significant limbs and add them into less significant limbs\n* (explicitly, we can borrow 2^{126} from limb `i + 1` to add `2^{246}` into `i`).\n* To ensure this has been done correctly, we validate that the borrow-adjusted limbs are all-zero for the first 120 bits.\n* We do *this* by multiplying the borrow-adjusted limbs by 1 / 2^{120} modulo CircutModulus, and we validate the result is in the range [0, ..., 2^{126} - 1].\n* TODO: explain why this check works. It's statistically sound but not perfectly sound. Chance of the check failing is ~1 in 2^{120}\n* I believe this is the most efficient way of performing the zero-check for this relation as it only requires `2N - 2` 126-bit range checks.\n* TODO: explain why we apply a 126-bit range check, this feels like a magic number\n* (it is. we could go higher, up to the number of bits in the CircuitModulus - 121, but 126 *should be* sufficient and is much cheaper)\n* TODO: apply checks in this method to validate twiddle_factor does not exceed 6\n* \n* @param lhs_terms a 2D array of BigNum\n* @param lhs_flags a 2D array of sign flags\n* @param rhs_terms a 2D array of BigNum\n* @param rhs_flags a 2D array of sign flags\n* @param linear_terms an array of BigNum\n* @param linear_flags an array of sign flags\n**/\npub(crate) fn evaluate_quadratic_expression<let N: u32, let MOD_BITS: u32, let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n    params: P<N, MOD_BITS>,\n    lhs_terms: [[[Field; N]; LHS_N]; NUM_PRODUCTS],\n    lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n    rhs_terms: [[[Field; N]; RHS_N]; NUM_PRODUCTS],\n    rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n    linear_terms: [[Field; N]; ADD_N],\n    linear_flags: [bool; ADD_N],\n) {\n    // use an unconstrained function to compute the value of the quotient\n    let (quotient, _, borrow_flags): ([Field; N], [Field; N], [Field; 2 * N]) = unsafe {\n        __compute_quadratic_expression_with_borrow_flags::<_, MOD_BITS, _, _, _, _>(\n            params,\n            lhs_terms,\n            lhs_flags,\n            rhs_terms,\n            rhs_flags,\n            linear_terms,\n            linear_flags,\n        )\n    };\n    // constrain the quotient to be in the range [0, ..., 2^{m} - 1], where `m` is log2(modulus) rounded up.\n    // Additionally, validate quotient limbs are also in the range [0, ..., 2^{120} - 1]\n    validate_quotient_in_range::<_, MOD_BITS>(quotient);\n    // TODO, validate we do not overflow N2 when multiplying and N when adding\n    // (should be a compile-time check...unconstrained function?)\n    // Compute the linear sums that represent lhs_1, rhs_1, lhs_2, rhs_2, add\n    let mut t0: [[Field; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n    let mut t1: [[Field; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n    let mut t4: [Field; N] = [0; N];\n\n    // TODO: this is super nasty as it requires a multiplication\n    let double_modulus: [Field; N] = params.double_modulus;\n    for k in 0..NUM_PRODUCTS {\n        for i in 0..N {\n            for j in 0..LHS_N {\n                // note: if is_negative is not known at comptime this is very expensive\n                if (lhs_flags[k][j]) {\n                    t0[k][i] -= lhs_terms[k][j][i];\n                    t0[k][i] += double_modulus[i];\n                } else {\n                    t0[k][i] += lhs_terms[k][j][i];\n                }\n            }\n            for j in 0..RHS_N {\n                if (rhs_flags[k][j]) {\n                    t1[k][i] -= rhs_terms[k][j][i];\n                    t1[k][i] += double_modulus[i];\n                } else {\n                    t1[k][i] += rhs_terms[k][j][i];\n                }\n            }\n        }\n    }\n    for i in 0..N {\n        for j in 0..ADD_N {\n            if (linear_flags[j]) {\n                t4[i] -= linear_terms[j][i];\n                t4[i] += double_modulus[i];\n            } else {\n                t4[i] += linear_terms[j][i];\n            }\n        }\n    }\n\n    // We want to evaluate that t0 * t1 + t2 * t3 + t4 - Quotient * Modulus = 0, evaluated over the integers\n    // For this we need to be able to borrow values from more-significant limbs into less-significant limbs,\n    // so that we can ensure that no limbs will underflow for an honest Prover\n    let mut product_limbs: [Field; 2 * N] = [0; 2 * N];\n\n    // Compute the product t0 * t1 + t2 * t3 + t4 - Quotient * Modulus\n    // TODO: this is super nasty as it requires a multiplication\n    for i in 0..N {\n        for j in 0..N {\n            for k in 0..NUM_PRODUCTS {\n                if k == 0 {\n                    let new_term = t0[k][i] * t1[k][j] - quotient[i] * params.modulus[j];\n                    std::as_witness(new_term); // width-4 optimization (n.b. might not be optimal if t2, t3 input arrays are nonzero)\n                    product_limbs[i + j] += new_term;\n                } else {\n                    product_limbs[i + j] += t0[k][i] * t1[k][j];\n                }\n            }\n            if (NUM_PRODUCTS == 0) {\n                product_limbs[i + j] -= quotient[i] * params.modulus[j];\n            }\n        }\n        product_limbs[i] += t4[i];\n    }\n\n    // each limb product represents the sum of 120-bit products.\n    // by setting the borrow value to 2^246 we are restricting this method's completeness to expressions\n    // where no more than 64 limb products are summed together.\n    // TODO: check in unconstrained function that this condition is satisfied\n    // TODO: define trade-offs regarding the value of borrow_shift\n    // (the larger the value, the greater the range check that is required on product_limbs)\n    // (126-bit range check is a sweet spot for the barretenberg backend as it decomposes into 9 14-bit range checks)\n    // (the barretenberg backend can evaluate these in 5.25 gates. 127 bits costs 6.5 gates)\n    let borrow_shift: Field = 0x40000000000000000000000000000000000000000000000000000000000000; // 2^{246}\n    let borrow_carry: Field = 0x40000000000000000000000000000000; // 2^{246 - 120} = 2^{126}\n    // N.B. borrow_flags is `Field` type because making it `bool` would apply boolean constraints to all `N2` array entries.\n    //      We only use `N2 - 2` borrow flags so applying 1-bit range checks on the array elements we use is more efficient.\n    // TODO: Once it is possible to perform arithmetic on generics we can use `borrow_flags: [bool;N+N-2]` to avoid this issue\n    borrow_flags[0].assert_max_bit_size::<1>();\n    product_limbs[0] += borrow_flags[0] * borrow_shift;\n    for i in 1..(N + N - 2) {\n        borrow_flags[i].assert_max_bit_size::<1>();\n        product_limbs[i] += (borrow_flags[i] * borrow_shift - borrow_flags[i - 1] * borrow_carry);\n    }\n    product_limbs[N + N - 2] -= borrow_flags[N + N - 3] * borrow_carry;\n\n    // Final step: Validate `product_limbs` represents the integer value `0`\n    // Each element `i` in `product_limbs` overlaps in bitrange with element `i+1`, EXCEPT for the low 120 bits\n    // i.e. we need to do the following for each limb `i`:\n    //      1. validate the limb's low-120 bits equals zero\n    //      2. compute the limb \"carry\" by right-shifting by 2^{120}\n    //      3. add the carry into limb `i+1`\n    // We can efficiently do all of the above by multiplying the limb by 2^{-120} and constraining the result to be <2^{126}\n    // (if the low 120 bits are nonzero the result will underflow and product a large value that cannot be range constrained)\n    // (the probability of an underflow value satisfying a 126-bit range constraint is approx. 2^{k - 126},\n    //  where k is the number of bits in the prime field)\n    // We then add the result into the next limb and repeat.\n    let hi_shift: Field = 0x1000000000000000000000000000000;\n    let hi_downshift: Field = 1 / hi_shift;\n    for i in 0..N + N - 2 {\n        product_limbs[i] *= hi_downshift;\n        std::as_witness(product_limbs[i]);\n        product_limbs[i].assert_max_bit_size::<126>(); // N.B. is this sufficient? going beyond 126 costs us 1 gate per limb\n        product_limbs[i + 1] += product_limbs[i];\n    }\n    // the most significant limb has no limb to \"carry\" values into - the entire limb must equal zero\n    assert(product_limbs[N + N - 2] == 0);\n}\n", "path": "/Users/saleel/nargo/github.com/noir-lang/noir-bignumv0.4.1/src/fns/expressions.nr" }, "80": { "source": "use crate::params::BigNumParams as P;\n\nuse crate::fns::{\n    expressions::evaluate_quadratic_expression,\n    unconstrained_helpers::{\n        __add_with_flags, __neg_with_flags, __sub_with_flags, __validate_gt_remainder,\n        __validate_in_field_compute_borrow_flags,\n    }, unconstrained_ops::{__div, __mul, __udiv_mod},\n};\n\n/**\n * In this file:\n *\n * conditional_select\n * assert_is_not_equal\n * eq\n * validate_in_field\n * validate_in_range\n * validate_quotient_in_range\n * validate_gt\n * neg\n * add\n * sub\n * mul\n * div\n * udiv_mod\n * udiv\n * umod\n */\n\n/**\n* @brief given an input seed, generate a pseudorandom BigNum value\n* @details we hash the input seed into `modulus_bits * 2` bits of entropy,\n* which is then reduced into a BigNum value\n* We use a hash function that can be modelled as a random oracle\n* This function *should* produce an output that is a uniformly randomly distributed value modulo BigNum::modulus()\n**/\npub(crate) fn derive_from_seed<let N: u32, let MOD_BITS: u32, let SeedBytes: u32>(\n    params: P<N, MOD_BITS>,\n    seed: [u8; SeedBytes],\n) -> [Field; N] {\n    let mut rolling_seed: [u8; SeedBytes + 1] = [0; SeedBytes + 1];\n    for i in 0..SeedBytes {\n        rolling_seed[i] = seed[i];\n        assert_eq(rolling_seed[i], seed[i]);\n    }\n\n    let mut hash_buffer: [u8; N * 2 * 15] = [0; N * 2 * 15];\n\n    let mut rolling_hash_fields: [Field; (SeedBytes / 31) + 1] = [0; (SeedBytes / 31) + 1];\n    let mut seed_ptr = 0;\n    for i in 0..(SeedBytes / 31) + 1 {\n        let mut packed: Field = 0;\n        for _ in 0..31 {\n            if (seed_ptr < SeedBytes) {\n                packed *= 256;\n                packed += seed[seed_ptr] as Field;\n                seed_ptr += 1;\n            }\n        }\n        rolling_hash_fields[i] = packed;\n    }\n\n    let compressed =\n        std::hash::poseidon2::Poseidon2::hash(rolling_hash_fields, (SeedBytes / 31) + 1);\n    let mut rolling_hash: [Field; 2] = [compressed, 0];\n\n    let num_hashes = (240 * N) / 254 + (((30 * N) % 32) != 0) as u32;\n    for i in 0..num_hashes - 1 {\n        let hash: Field = std::hash::poseidon2::Poseidon2::hash(rolling_hash, 2);\n        let hash: [u8; 32] = hash.to_le_bytes();\n        for j in 0..30 {\n            hash_buffer[i * 30 + j] = hash[j];\n        }\n        rolling_hash[1] += 1;\n    }\n\n    {\n        let hash: Field = std::hash::poseidon2::Poseidon2::hash(rolling_hash, 2);\n        let hash: [u8; 32] = hash.to_le_bytes();\n        let remaining_bytes = 30 * N - (num_hashes - 1) * 30;\n        for j in 0..remaining_bytes {\n            hash_buffer[(num_hashes - 1) * 30 + j] = hash[j];\n        }\n    }\n\n    let num_bits = MOD_BITS * 2;\n    let num_bytes = num_bits / 8 + ((num_bits % 8) != 0) as u32;\n\n    let bits_in_last_byte = num_bits as u8 % 8;\n    let last_byte_mask = (1 as u8 << bits_in_last_byte) - 1;\n    hash_buffer[num_bytes - 1] = hash_buffer[num_bytes - 1] & last_byte_mask;\n\n    let num_bigfield_chunks = (2 * N) / (N - 1) + (((2 * N) % (N - 1)) != 0) as u32;\n    let mut byte_ptr = 0;\n\n    // we want to convert our byte array into bigfield chunks\n    // each chunk has at most N-1 limbs\n    // to determine the exact number of chunks, we need the `!=` or `>` operator which is not avaiable when defining array sizes\n    // so we overestimate at 4\n    // e.g. if N = 20, then we have 40 limbs we want to reduce, but each bigfield chunk is 19 limbs, so we need 3\n    // if N = 2, we have 4 limbs we want to reduce but each bigfield chunk is only 1 limb, so we need 4\n    // max possible number of chunks is therefore 4\n    let mut bigfield_chunks: [[Field; N]; 4] = [[0; N]; 4];\n    for k in 0..num_bigfield_chunks {\n        let mut bigfield_limbs: [Field; N] = [0; N];\n        let mut num_filled_bytes = (k * 30);\n        let mut num_remaining_bytes = num_bytes - num_filled_bytes;\n        let mut num_remaining_limbs =\n            (num_remaining_bytes / 15) + (num_remaining_bytes % 15 > 0) as u32;\n        let mut more_than_N_minus_one_limbs = (num_remaining_limbs > (N - 1)) as u32;\n        let mut num_limbs_in_bigfield = more_than_N_minus_one_limbs * (N - 1)\n            + num_remaining_limbs * (1 - more_than_N_minus_one_limbs);\n\n        for j in 0..num_limbs_in_bigfield {\n            let mut limb: Field = 0;\n            for _ in 0..15 {\n                let need_more_bytes = (byte_ptr < num_bytes);\n                let mut byte = hash_buffer[byte_ptr];\n                limb *= (256 * need_more_bytes as Field + (1 - need_more_bytes as Field));\n                limb += byte as Field * need_more_bytes as Field;\n                byte_ptr += need_more_bytes as u32;\n            }\n            bigfield_limbs[num_limbs_in_bigfield - 1 - j] = limb;\n        }\n        bigfield_chunks[num_bigfield_chunks - 1 - k] = bigfield_limbs;\n    }\n\n    let mut bigfield_rhs_limbs: [Field; N] = [0; N];\n    bigfield_rhs_limbs[N - 1] = 1;\n    validate_in_range::<_, MOD_BITS>(bigfield_rhs_limbs);\n\n    let mut result: [Field; N] = [0; N];\n\n    for i in 0..num_bigfield_chunks {\n        let bigfield_lhs_limbs = bigfield_chunks[i];\n\n        result = mul(params, result, bigfield_rhs_limbs);\n        result = add(params, result, bigfield_lhs_limbs);\n    }\n    result\n}\n\n/**\n* @brief conditional_select given the value of `predicate` return either `self` (if 0) or `other` (if 1)\n* @description should be cheaper than using an IF statement (TODO: check!)\n**/\npub(crate) fn conditional_select<let N: u32>(\n    lhs: [Field; N],\n    rhs: [Field; N],\n    predicate: bool,\n) -> [Field; N] {\n    let mut result: [Field; N] = lhs;\n    for i in 0..N {\n        result[i] = (lhs[i] - rhs[i]) * predicate as Field + rhs[i];\n    }\n    result\n}\n\n/**\n    * @brief Validate self != other\n    * @details If A == B, then A == B mod N.\n    *          We can efficiently evaluate A == B mod N where N = circuit modulus\n    *          This method is *sound*, but not *complete* (i.e. A != B but A == B mod N)\n    *          However the probability of an honest Prover being unable to satisfy this check is tiny!\n    *          (todo: compute how tiny)\n    **/\npub(crate) fn assert_is_not_equal<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [Field; N],\n    rhs: [Field; N],\n) {\n    let mut l: Field = 0;\n    let mut r: Field = 0;\n    let mut modulus_mod_n: Field = 0;\n    let two_pow_120: Field = 0x1000000000000000000000000000000;\n    let modulus = params.modulus;\n    for i in 0..N {\n        l *= two_pow_120;\n        r *= two_pow_120;\n        modulus_mod_n *= two_pow_120;\n        l += lhs[N - i - 1];\n        r += rhs[N - i - 1];\n        modulus_mod_n += modulus[N - i - 1];\n    }\n\n    // lhs can be either X mod N or P + X mod N\n    // rhs can be either Y mod N or P + Y mod N\n    // If lhs - rhs = 0 mod P then lhs - rhs = 0, P or -P mod N\n    let mut diff = l - r;\n    let mut target = diff * (diff + modulus_mod_n) * (diff - modulus_mod_n);\n    assert(target != 0, \"asssert_is_not_equal fail\");\n}\n\npub(crate) fn eq<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [Field; N],\n    rhs: [Field; N],\n) -> bool {\n    let diff = sub::<_, MOD_BITS>(params, lhs, rhs);\n    // if self == other, possible values of `diff` will be `p` or `0`\n    // (the subtract operator constrains diff to be < ceil(log(p)))\n    // TODO: can do this more efficiently via witngen in unconstrained functions?\n    let mut is_equal_modulus: bool = true;\n    let mut is_equal_zero: bool = true;\n    for i in 0..N {\n        is_equal_modulus = is_equal_modulus & (diff[i] == params.modulus[i]);\n        is_equal_zero = is_equal_zero & (diff[i] == 0);\n    }\n    is_equal_modulus | is_equal_zero\n}\n\npub(crate) fn validate_in_field<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [Field; N],\n) {\n    // N.B. need to combine with validate_in_range if `self` limbs have not been range constrained\n    let mut p_minus_self: [Field; N] = [0; N];\n    let modulus: [Field; N] = params.modulus;\n    for i in 0..N {\n        p_minus_self[i] = modulus[i] - val[i];\n    }\n    let borrow_flags = unsafe { __validate_in_field_compute_borrow_flags(params, val) };\n    let two_pow_120: Field = 0x1000000000000000000000000000000;\n    p_minus_self[0] += borrow_flags[0] as Field * two_pow_120;\n    for i in 1..N - 1 {\n        p_minus_self[i] += (borrow_flags[i] as Field * two_pow_120 - borrow_flags[i - 1] as Field);\n    }\n    p_minus_self[N - 1] -= borrow_flags[N - 2] as Field;\n    let mut compare = val;\n    compare = p_minus_self;\n    validate_in_range::<_, MOD_BITS>(compare);\n}\n\n/**\n* @brief Validate a BigNum instance is correctly range constrained to contain no more than Params::modulus_bits()\n**/\npub(crate) fn validate_in_range<let N: u32, let MOD_BITS: u32>(limbs: [Field; N]) {\n    for i in 0..(N - 1) {\n        limbs[i].assert_max_bit_size::<120>();\n    }\n    limbs[N - 1].assert_max_bit_size::<MOD_BITS - ((N - 1) * 120)>();\n}\n\n/**\n* @brief validate quotient produced from `evaluate_quadratic_expression` is well-formed\n* @description because the inputs into evaluate_quadratic_expression may cause the quotient to extend beyond `Params::modulus_bits`.\n*              We allow the quotient to extend 6 bits beyond Params::modulus_bits()\n*              Why is this?\n*              several factors:    1. quotient * modulus , limbs cannot overflow field boundary (254 bits)\n*                                  2. in `evaluate_quadratic_expression`, we require that for `expression - quotient * modulus`,\n*                                     limbs cannot exceed 246 bits (246 magic number due to a higher number adding extra range check gates)\n*              because of factor 2 and the fact that modulus limbs are 120 bits, quotient limbs cannot be >126 bits\n*\n*              Note: doesn't this mean that final_limb_bits should be constrained to be 126 bits, not modulus_bits() - ((N - 1) * 120) + 6?\n*              TODO: think about this more! we want the range constraint we apply to be as small as allowable as this is more efficient\n**/\npub(crate) fn validate_quotient_in_range<let N: u32, let MOD_BITS: u32>(limbs: [Field; N]) {\n    for i in 0..(N) {\n        limbs[i].assert_max_bit_size::<120>();\n    }\n    // Note: replace magic number 6 with definition\n    limbs[N - 1].assert_max_bit_size::<MOD_BITS - ((N - 1) * 120) + 6>();\n}\n\n// validate that lhs - rhs does not underflow i.e. lhs > rhs\npub(crate) fn validate_gt<let N: u32, let MOD_BITS: u32>(lhs: [Field; N], rhs: [Field; N]) {\n    // so we do... p - x - r = 0 and there might be borrow flags\n    // a - b = r\n    // p + a - b - r = 0\n    let (result, carry_flags, borrow_flags) = unsafe { __validate_gt_remainder(lhs, rhs) };\n    validate_in_range::<_, MOD_BITS>(result);\n\n    let borrow_shift = 0x1000000000000000000000000000000;\n    let carry_shift = 0x1000000000000000000000000000000;\n\n    let mut addend: [Field; N] = [0; N];\n    let result_limb = lhs[0] - rhs[0] + addend[0] - result[0] - 1\n        + (borrow_flags[0] as Field * borrow_shift)\n        - (carry_flags[0] as Field * carry_shift);\n    assert(result_limb == 0);\n\n    for i in 1..N - 1 {\n        let result_limb = lhs[i] - rhs[i] + addend[i] - result[i] - borrow_flags[i - 1] as Field\n            + carry_flags[i - 1] as Field\n            + ((borrow_flags[i] as Field - carry_flags[i] as Field) * borrow_shift);\n        assert(result_limb == 0);\n    }\n\n    let result_limb = lhs[N - 1] - rhs[N - 1] + addend[N - 1]\n        - result[N - 1]\n        - borrow_flags[N - 2] as Field\n        + carry_flags[N - 2] as Field;\n    assert(result_limb == 0);\n}\n\npub(crate) fn neg<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [Field; N],\n) -> [Field; N] {\n    // so we do... p - x - r = 0 and there might be borrow flags\n    let (result, borrow_flags) = unsafe { __neg_with_flags(params, val) };\n    validate_in_range::<_, MOD_BITS>(result);\n    let modulus = params.modulus;\n    let borrow_shift = 0x1000000000000000000000000000000;\n    let result_limb = modulus[0] - val[0] - result[0] + (borrow_flags[0] as Field * borrow_shift);\n    assert(result_limb == 0);\n    for i in 1..N - 1 {\n        let result_limb = modulus[i] - val[i] - result[i] - borrow_flags[i - 1] as Field\n            + (borrow_flags[i] as Field * borrow_shift);\n        assert(result_limb == 0);\n    }\n    let result_limb = modulus[N - 1] - val[N - 1] - result[N - 1] - borrow_flags[N - 2] as Field;\n    assert(result_limb == 0);\n    result\n}\n\npub(crate) fn add<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [Field; N],\n    rhs: [Field; N],\n) -> [Field; N] {\n    // so we do... p - x - r = 0 and there might be borrow flags\n    let (result, carry_flags, borrow_flags, overflow_modulus) =\n        unsafe { __add_with_flags(params, lhs, rhs) };\n    validate_in_range::<_, MOD_BITS>(result);\n    let modulus = params.modulus;\n    let borrow_shift = 0x1000000000000000000000000000000;\n    let carry_shift = 0x1000000000000000000000000000000;\n\n    let mut subtrahend: [Field; N] = [0; N];\n    if (overflow_modulus) {\n        subtrahend = modulus;\n    }\n    let result_limb = lhs[0] + rhs[0] - subtrahend[0] - result[0]\n        + (borrow_flags[0] as Field * borrow_shift)\n        - (carry_flags[0] as Field * carry_shift);\n    assert(result_limb == 0);\n    for i in 1..N - 1 {\n        let result_limb = lhs[i] + rhs[i] - subtrahend[i] - result[i] - borrow_flags[i - 1] as Field\n            + carry_flags[i - 1] as Field\n            + ((borrow_flags[i] as Field - carry_flags[i] as Field) * borrow_shift);\n        assert(result_limb == 0);\n    }\n    let result_limb = lhs[N - 1] + rhs[N - 1]\n        - subtrahend[N - 1]\n        - result[N - 1]\n        - borrow_flags[N - 2] as Field\n        + carry_flags[N - 2] as Field;\n    assert(result_limb == 0);\n    result\n}\n\npub(crate) fn sub<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [Field; N],\n    rhs: [Field; N],\n) -> [Field; N] {\n    // so we do... p - x - r = 0 and there might be borrow flags\n    // a - b = r\n    // p + a - b - r = 0\n    let (result, carry_flags, borrow_flags, underflow) =\n        unsafe { __sub_with_flags(params, lhs, rhs) };\n    validate_in_range::<_, MOD_BITS>(result);\n    let modulus = params.modulus;\n    let borrow_shift = 0x1000000000000000000000000000000;\n    let carry_shift = 0x1000000000000000000000000000000;\n\n    let mut addend: [Field; N] = [0; N];\n    if (underflow) {\n        addend = modulus;\n    }\n    let result_limb = lhs[0] - rhs[0] + addend[0] - result[0]\n        + (borrow_flags[0] as Field * borrow_shift)\n        - (carry_flags[0] as Field * carry_shift);\n    assert(result_limb == 0);\n    for i in 1..N - 1 {\n        let result_limb = lhs[i] - rhs[i] + addend[i] - result[i] - borrow_flags[i - 1] as Field\n            + carry_flags[i - 1] as Field\n            + ((borrow_flags[i] as Field - carry_flags[i] as Field) * borrow_shift);\n        assert(result_limb == 0);\n    }\n    let result_limb = lhs[N - 1] - rhs[N - 1] + addend[N - 1]\n        - result[N - 1]\n        - borrow_flags[N - 2] as Field\n        + carry_flags[N - 2] as Field;\n    assert(result_limb == 0);\n    result\n}\n\n// Note: this method is expensive! Try to craft quadratic relations and directly evaluate them\n//       via evaluate_quadratic_expression\n// e.g. performing a sum of multiple multiplications and additions via `evaluate_quadratic_expression`\n//      will create much fewer constraints than calling `mul` and `add` directly\npub(crate) fn mul<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [Field; N],\n    rhs: [Field; N],\n) -> [Field; N] {\n    let result = unsafe { __mul::<_, MOD_BITS>(params, lhs, rhs) };\n    evaluate_quadratic_expression(\n        params,\n        [[lhs]],\n        [[false]],\n        [[rhs]],\n        [[false]],\n        [result],\n        [true],\n    );\n    result\n}\n\n// Note: this method is expensive! Witness computation is extremely expensive as it requires modular exponentiation\npub(crate) fn div<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [Field; N],\n    rhs: [Field; N],\n) -> [Field; N] {\n    assert(\n        params.has_multiplicative_inverse,\n        \"BigNum has no multiplicative inverse. Use udiv for unsigned integer division\",\n    );\n    let result = unsafe { __div::<_, MOD_BITS>(params, lhs, rhs) };\n    evaluate_quadratic_expression(\n        params,\n        [[result]],\n        [[false]],\n        [[rhs]],\n        [[false]],\n        [lhs],\n        [true],\n    );\n    result\n}\n\n/**\n* @brief udiv_mod performs integer division between numerator, divisor \n*\n* i.e. 1. floor(numerator / divisor) = quotient\n*      2. numerator % divisor = remainder\n*      3. divisor * quotient + remainder = numerator\n**/\npub(crate) fn udiv_mod<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    numerator: [Field; N],\n    divisor: [Field; N],\n) -> ([Field; N], [Field; N]) {\n    let (quotient, remainder) = unsafe { __udiv_mod(numerator, divisor) };\n\n    // self / divisor = quotient rounded\n    // quotient * divisor + remainder - self = 0\n    evaluate_quadratic_expression(\n        params,\n        [[quotient]],\n        [[false]],\n        [[divisor]],\n        [[false]],\n        [numerator, remainder],\n        [true, false],\n    );\n    // we need (remainder < divisor)\n    // implies (divisor - remainder > 0)\n    validate_gt::<_, MOD_BITS>(divisor, remainder);\n    (quotient, remainder)\n}\n\n/**\n* @brief udiv_mod performs integer division between numerator, divisor \n*\n* i.e. return param is floor(numerator / divisor)\n**/\npub(crate) fn udiv<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    numerator: [Field; N],\n    divisor: [Field; N],\n) -> [Field; N] {\n    udiv_mod::<_, MOD_BITS>(params, numerator, divisor).0\n}\n\n/**\n* @brief udiv_mod performs integer modular reduction\n*\n* i.e. 1. numerator % divisor = return value\n**/\npub(crate) fn umod<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    numerator: [Field; N],\n    divisor: [Field; N],\n) -> [Field; N] {\n    udiv_mod::<_, MOD_BITS>(params, numerator, divisor).1\n}\n\n", "path": "/Users/saleel/nargo/github.com/noir-lang/noir-bignumv0.4.1/src/fns/constrained_ops.nr" }, "81": { "source": "/**\n* @brief construct a BigNum instance out of an array of bytes in BIG ENDIAN format\n* @description: each 120-bit limb represents 15 bytes, we require that the size of the byte array\n*               is precisely large enough to cover MOD_BITS\n* @param x: input byte array\n**/\npub(crate) fn from_be_bytes<let N: u32, let MOD_BITS: u32, let NBytes: u32>(\n    x: [u8; NBytes],\n) -> [Field; N] {\n    let num_bits = NBytes * 8;\n    assert(num_bits >= MOD_BITS);\n    assert(num_bits - MOD_BITS < 8);\n    let mut result = [0; N];\n\n    let excess_bytes = N * 15 - NBytes;\n    let final_limb_bytes = 15 - excess_bytes;\n    let mut limb: Field = 0;\n    let mut k = 0;\n    for _j in 0..final_limb_bytes {\n        limb *= 256;\n        limb += x[k] as Field;\n        k += 1;\n    }\n    result[N - 1] = limb;\n\n    for i in 1..N {\n        let mut limb: Field = 0;\n        for _j in 0..15 {\n            limb *= 256;\n            limb += x[k] as Field;\n            k += 1;\n        }\n        result[N - i - 1] = limb;\n    }\n\n    let most_significant_byte: Field = x[0] as Field;\n\n    most_significant_byte.assert_max_bit_size::<8 - (NBytes * 8 - MOD_BITS)>();\n    result\n}\n\npub(crate) fn to_le_bytes<let N: u32, let MOD_BITS: u32, let NBytes: u32>(\n    val: [Field; N],\n) -> [u8; NBytes] {\n    let nbytes = (MOD_BITS / 8) + (MOD_BITS % 8 != 0) as u32;\n    assert(nbytes <= NBytes);\n\n    let mut result: [u8; NBytes] = [0; NBytes];\n    for i in 0..N - 1 {\n        let limb_bytes: [u8; 15] = val[i].to_le_bytes();\n        for j in 0..15 {\n            result[i * 15 + j] = limb_bytes[j];\n        }\n    }\n    let last_limb_bytes: [u8; 15] = val[N - 1].to_le_bytes();\n    let num_last_bytes = (NBytes - (N - 1) * 15);\n    for i in 0..num_last_bytes {\n        result[(N - 1) * 15 + i] = last_limb_bytes[i];\n    }\n    result\n}\n", "path": "/Users/saleel/nargo/github.com/noir-lang/noir-bignumv0.4.1/src/fns/serialization.nr" }, "83": { "source": "use crate::fns::constrained_ops::derive_from_seed;\nuse crate::fns::unconstrained_helpers::{\n    __barrett_reduction, __multiplicative_generator, __primitive_root_log_size,\n    __tonelli_shanks_sqrt_inner_loop_check,\n};\nuse crate::params::BigNumParams as P;\nuse crate::utils::split_bits;\nuse crate::utils::u60_representation::U60Repr;\n\n/**\n * In this file:\n *\n * __one\n * __derive_from_seed\n * __eq\n * __is_zero\n * __neg\n * __add\n * __sub\n * __mul_with_quotient\n * __mul\n * __div\n * __udiv_mod\n * __invmod\n * __pow\n * __batch_invert\n * __batch_invert_slice\n */\n\npub(crate) unconstrained fn __one<let N: u32>() -> [Field; N] {\n    let mut limbs: [Field; N] = [0; N];\n    limbs[0] = 1;\n    limbs\n}\n\n/// Deterministically derives a big_num from a seed value.\n///\n/// Takes a seed byte array and generates a big_num in the range [0, modulus-1].\n///\n/// ## Value Parameters\n///\n/// - `params`: The BigNum parameters containing modulus and reduction info\n/// - `seed`:  Input seed bytes to derive from.\n///\n/// ## Returns\n///\n///  An array of field elements derived from the seed (the limbs of the big_num)\npub(crate) unconstrained fn __derive_from_seed<let N: u32, let MOD_BITS: u32, let SeedBytes: u32>(\n    params: P<N, MOD_BITS>,\n    seed: [u8; SeedBytes],\n) -> [Field; N] {\n    let out = derive_from_seed::<N, MOD_BITS, SeedBytes>(params, seed);\n    out\n}\n\npub(crate) unconstrained fn __eq<let N: u32>(lhs: [Field; N], rhs: [Field; N]) -> bool {\n    lhs == rhs\n}\n\npub(crate) unconstrained fn __is_zero<let N: u32>(limbs: [Field; N]) -> bool {\n    let mut result: bool = true;\n    for i in 0..N {\n        result = result & (limbs[i] == 0);\n    }\n\n    result\n}\n\n/**\n* @brief given an input `x`, compute `2p - x` (unconstrained)\n*\n* @description we subtract the input from double the modulus, because all constrained BigNum operations\n*              only guarantee that the output is in the range [0, ceil(log2(p))].\n*              I.E. the input may be larger than the modulus `p`.\n*              In order to ensure this operation does not underflow, we compute `2p - x` instead of `p - x`.\n*              N.B. constrained BigNum operations do not fully constrain outputs to be in the range [0, p-1]\n*              because such a check is expensive and usually unneccesary.\n*/\npub(crate) unconstrained fn __neg<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    limbs: [Field; N],\n) -> [Field; N] {\n    let f: [Field; N] = limbs;\n    let x_u60: U60Repr<N, 2> = U60Repr::from(f);\n    U60Repr::into(params.modulus_u60 - x_u60)\n}\n\npub(crate) unconstrained fn __add<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [Field; N],\n    rhs: [Field; N],\n) -> [Field; N] {\n    let x_u60: U60Repr<N, 2> = U60Repr::from(lhs);\n    let y_u60: U60Repr<N, 2> = U60Repr::from(rhs);\n\n    let mut z_u60 = x_u60 + y_u60;\n\n    if z_u60.gte(params.modulus_u60) {\n        z_u60 = z_u60 - params.modulus_u60;\n    }\n    U60Repr::into(z_u60)\n}\n\n/**\n* @brief given inputs `x, y` compute 2p + x - y (unconstrained)\n* @description see `__neg` for why we use 2p instead of p\n**/\npub(crate) unconstrained fn __sub<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [Field; N],\n    rhs: [Field; N],\n) -> [Field; N] {\n    __add(params, lhs, __neg(params, rhs))\n}\n\npub(crate) unconstrained fn __mul_with_quotient<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [Field; N],\n    rhs: [Field; N],\n) -> ([Field; N], [Field; N]) {\n    let mut mul: [Field; 2 * N] = [0; 2 * N];\n    for i in 0..N {\n        for j in 0..N {\n            mul[i + j] += lhs[i] * rhs[j];\n        }\n    }\n    let to_reduce = split_bits::__normalize_limbs(mul, 2 * N);\n    let (q, r) = __barrett_reduction(\n        to_reduce,\n        params.redc_param,\n        MOD_BITS,\n        params.modulus,\n        params.modulus_u60_x4,\n    );\n\n    (q, r)\n}\n\npub(crate) unconstrained fn __mul<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [Field; N],\n    rhs: [Field; N],\n) -> [Field; N] {\n    let (_, b) = __mul_with_quotient::<_, MOD_BITS>(params, lhs, rhs);\n    b\n}\n\npub(crate) unconstrained fn __div<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    numerator: [Field; N],\n    divisor: [Field; N],\n) -> [Field; N] {\n    let inv_divisor = __invmod::<_, MOD_BITS>(params, divisor);\n    __mul::<_, MOD_BITS>(params, numerator, inv_divisor)\n}\n\n/**\n* @brief __udiv_mod performs *unconstrained* integer division between numerator, divisor \n*\n* i.e. 1. floor(numerator / divisor) = quotient\n*      2. numerator % divisor = remainder\n*      3. divisor * quotient + remainder = numerator\n**/\npub(crate) unconstrained fn __udiv_mod<let N: u32>(\n    numerator: [Field; N],\n    divisor: [Field; N],\n) -> ([Field; N], [Field; N]) {\n    let mut quotient_u60: U60Repr<N, 2> = U60Repr::from([0; N]);\n    let mut remainder_u60: U60Repr<N, 2> = U60Repr::from(numerator);\n\n    let mut divisor_u60: U60Repr<N, 2> = U60Repr::from(divisor);\n    let b = divisor_u60;\n\n    let mut bit_difference = remainder_u60.get_msb() - divisor_u60.get_msb();\n\n    let mut accumulator_u60: U60Repr<N, 2> = U60Repr::one();\n    divisor_u60 = divisor_u60.shl(bit_difference);\n    accumulator_u60 = accumulator_u60.shl(bit_difference);\n\n    if (divisor_u60.gte(remainder_u60 + U60Repr::one())) {\n        divisor_u60.shr1();\n        accumulator_u60.shr1();\n    }\n    for _ in 0..(N * 120) {\n        if (remainder_u60.gte(b) == false) {\n            break;\n        }\n\n        // we've shunted 'divisor' up to have the same bit length as our remainder.\n        // If remainder >= divisor, then a is at least '1 << bit_difference' multiples of b\n        if (remainder_u60.gte(divisor_u60)) {\n            remainder_u60 -= divisor_u60;\n            // we can use OR here instead of +, as\n            // accumulator is always a nice power of two\n            quotient_u60 = quotient_u60 + accumulator_u60;\n        }\n        divisor_u60.shr1(); // >>= 1;\n        accumulator_u60.shr1(); //  >>= 1;\n    }\n\n    (U60Repr::into(quotient_u60), U60Repr::into(remainder_u60))\n}\n\npub(crate) unconstrained fn __invmod<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [Field; N],\n) -> [Field; N] {\n    let one: [Field; N] = __one::<N>();\n    let one_u60: U60Repr<N, 2> = U60Repr::from(one);\n    let exp_u60 = params.modulus_u60.sub(one_u60.add(one_u60));\n    let exp = U60Repr::into(exp_u60);\n    __pow::<_, MOD_BITS>(params, val, exp)\n}\n\npub(crate) unconstrained fn __pow<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [Field; N],\n    exponent: [Field; N],\n) -> [Field; N] {\n    let x: U60Repr<N, 2> = U60Repr::from(exponent);\n\n    let num_bits = MOD_BITS + 1;\n\n    let mut accumulator: [Field; N] = __one::<N>();\n\n    for i in 0..num_bits {\n        accumulator = __mul::<_, MOD_BITS>(params, accumulator, accumulator);\n        if x.get_bit(num_bits - i - 1) {\n            accumulator = __mul::<_, MOD_BITS>(params, accumulator, val);\n        }\n    }\n    accumulator\n}\n\npub(crate) unconstrained fn __batch_invert<let N: u32, let MOD_BITS: u32, let M: u32>(\n    params: P<N, MOD_BITS>,\n    x: [[Field; N]; M],\n) -> [[Field; N]; M] {\n    // TODO: ugly! Will fail if input slice is empty\n    let mut accumulator: [Field; N] = __one::<N>();\n    let mut result: [[Field; N]; M] = [[0; N]; M];\n    let mut temporaries: [[Field; N]] = &[];\n    for i in 0..x.len() {\n        temporaries = temporaries.push_back(accumulator);\n        if (__is_zero(x[i]) == false) {\n            accumulator = __mul::<_, MOD_BITS>(params, accumulator, x[i]);\n        }\n    }\n\n    accumulator = __invmod::<_, MOD_BITS>(params, accumulator);\n    let mut T0: [Field; N] = [0; N];\n    for i in 0..x.len() {\n        let idx = x.len() - 1 - i;\n        if (__is_zero(x[idx]) == false) {\n            T0 = __mul::<_, MOD_BITS>(params, accumulator, temporaries[idx]);\n            accumulator = __mul::<_, MOD_BITS>(params, accumulator, x[idx]);\n            result[idx] = T0;\n        }\n    }\n    result\n}\n\npub(crate) unconstrained fn __batch_invert_slice<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    x: [[Field; N]],\n) -> [[Field; N]] {\n    // TODO: ugly! Will fail if input slice is empty\n    let mut accumulator: [Field; N] = __one::<N>();\n    let mut result: [[Field; N]] = [[0; N]];\n    let mut temporaries: [[Field; N]] = &[];\n    for i in 0..x.len() {\n        temporaries = temporaries.push_back(accumulator);\n        if (__is_zero(x[i]) == false) {\n            accumulator = __mul::<_, MOD_BITS>(params, accumulator, x[i]);\n        }\n        result = result.push_back([0; N]);\n    }\n\n    accumulator = __invmod::<_, MOD_BITS>(params, accumulator);\n    let mut T0: [Field; N] = [0; N];\n    for i in 0..x.len() {\n        let idx = x.len() - 1 - i;\n        if (__is_zero(x[idx]) == false) {\n            T0 = __mul::<_, MOD_BITS>(params, accumulator, temporaries[idx]);\n            accumulator = __mul::<_, MOD_BITS>(params, accumulator, x[idx]);\n            result[idx] = T0;\n        }\n    }\n    result\n}\n\n/**\n* @brief compute a modular square root using the Tonelli-Shanks algorithm\n* @details only use for prime fields! Function may infinite loop if used for non-prime fields\n* @note this is unconstrained fn. To constrain a square root, validate that output^2 = self\n* TODO: create fn that constrains nonexistence of square root (i.e. find x where x^2 = -self)\n**/\npub(crate) unconstrained fn __tonelli_shanks_sqrt<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    input: [Field; N],\n) -> std::option::Option<[Field; N]> {\n    // Tonelli-shanks algorithm begins by finding a field element Q and integer S,\n    // such that (p - 1) = Q.2^{s}\n    // We can compute the square root of a, by considering a^{(Q + 1) / 2} = R\n    // Once we have found such an R, we have\n    // R^{2} = a^{Q + 1} = a^{Q}a\n    // If a^{Q} = 1, we have found our square root.\n    // Otherwise, we have a^{Q} = t, where t is a 2^{s-1}'th root of unity.\n    // This is because t^{2^{s-1}} = a^{Q.2^{s-1}}.\n    // We know that (p - 1) = Q.w^{s}, therefore t^{2^{s-1}} = a^{(p - 1) / 2}\n    // From Euler's criterion, if a is a quadratic residue, a^{(p - 1) / 2} = 1\n    // i.e. t^{2^{s-1}} = 1\n    // To proceed with computing our square root, we want to transform t into a smaller subgroup,\n    // specifically, the (s-2)'th roots of unity.\n    // We do this by finding some value b,such that\n    // (t.b^2)^{2^{s-2}} = 1 and R' = R.b\n    // Finding such a b is trivial, because from Euler's criterion, we know that,\n    // for any quadratic non-residue z, z^{(p - 1) / 2} = -1\n    // i.e. z^{Q.2^{s-1}} = -1\n    // => z^Q is a 2^{s-1}'th root of -1\n    // => z^{Q^2} is a 2^{s-2}'th root of -1\n    // Since t^{2^{s-1}} = 1, we know that t^{2^{s - 2}} = -1\n    // => t.z^{Q^2} is a 2^{s - 2}'th root of unity.\n    // We can iteratively transform t into ever smaller subgroups, until t = 1.\n    // At each iteration, we need to find a new value for b, which we can obtain\n    // by repeatedly squaring z^{Q}\n    let one_u60: U60Repr<N, 2> = unsafe { U60Repr::one() };\n    let primitive_root_log_size = __primitive_root_log_size::<_, MOD_BITS>(params);\n    let mut Q = (params.modulus_u60 - one_u60).shr(primitive_root_log_size - 1);\n    let Q_minus_one_over_two_u60 = (Q - one_u60).shr(2);\n    let Q_minus_one_over_two: [Field; N] = U60Repr::into(Q_minus_one_over_two_u60);\n    let mut z = __multiplicative_generator::<_, MOD_BITS>(params); // the generator is a non-residue\n    let mut b = __pow::<_, MOD_BITS>(params, input, Q_minus_one_over_two);\n    let mut r = __mul::<_, MOD_BITS>(params, input, b);\n    let mut t = __mul::<_, MOD_BITS>(params, r, b);\n    let mut check: [Field; N] = t;\n    for _ in 0..primitive_root_log_size - 1 {\n        check = __mul::<_, MOD_BITS>(params, check, check);\n    }\n    let mut found_root = false;\n    let one: [Field; N] = __one::<N>();\n    if (__eq(check, one) == false) {} else {\n        let mut t1 = __pow::<_, MOD_BITS>(params, z, Q_minus_one_over_two);\n        let mut t2 = __mul::<_, MOD_BITS>(params, t1, z);\n        let mut c = __mul::<_, MOD_BITS>(params, t2, t1);\n        let mut m: u32 = primitive_root_log_size;\n        // tonelli shanks inner 1\n        // (if t2m == 1) then skip\n        // else increase i and square t2m and go again\n        // algorithm runtime should only be max the number of bits in modulus\n        for _ in 0..MOD_BITS {\n            if (__eq(t, one)) {\n                found_root = true;\n                break;\n            }\n            let mut t2m = t;\n            // while loop time\n            let i = __tonelli_shanks_sqrt_inner_loop_check::<_, MOD_BITS>(params, t2m, 0);\n            let mut j = m - i - 1;\n            b = c;\n            for _ in 0..j {\n                // how big\n                if (j == 0) {\n                    break;\n                }\n                b = __mul(params, b, b);\n                //j -= 1;\n            }\n            c = __mul::<_, MOD_BITS>(params, b, b);\n            t = __mul::<_, MOD_BITS>(params, t, c);\n            r = __mul::<_, MOD_BITS>(params, r, b);\n            m = i;\n        }\n    }\n    let result = if found_root {\n        std::option::Option::some(r)\n    } else {\n        std::option::Option::none()\n    };\n    result\n}\n", "path": "/Users/saleel/nargo/github.com/noir-lang/noir-bignumv0.4.1/src/fns/unconstrained_ops.nr" }, "84": { "source": "use crate::utils::split_bits;\nuse crate::utils::u60_representation::U60Repr;\n\nuse crate::fns::unconstrained_ops::{__add, __eq, __mul, __neg, __one, __pow};\nuse crate::params::BigNumParams as P;\n\nglobal TWO_POW_60: u64 = 0x1000000000000000;\n\n/**\n * In this file:\n *\n * __validate_in_field_compute_borrow_flags\n * __validate_gt_remainder\n * __neg_with_flags\n * __add_with_flags\n * __sub_with_flags\n * __barrett_reduction\n * __tonelli_shanks_sqrt\n */\n\npub(crate) unconstrained fn __validate_in_field_compute_borrow_flags<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [Field; N],\n) -> [bool; N] {\n    let mut flags: [bool; N] = [false; N];\n    let modulus: [Field; N] = params.modulus;\n    flags[0] = modulus[0].lt(val[0]);\n    for i in 1..N - 1 {\n        flags[i] = modulus[i].lt(val[i] + flags[i - 1] as Field);\n    }\n    flags\n}\n\npub(crate) unconstrained fn __validate_gt_remainder<let N: u32>(\n    lhs: [Field; N],\n    rhs: [Field; N],\n) -> ([Field; N], [bool; N], [bool; N]) {\n    let a_u60: U60Repr<N, 2> = U60Repr::from(lhs);\n    let mut b_u60: U60Repr<N, 2> = U60Repr::from(rhs);\n\n    let underflow = b_u60.gte(a_u60);\n    b_u60 += U60Repr::one();\n    assert(underflow == false, \"BigNum::validate_gt check fails\");\n    let mut result_u60: U60Repr<N, 2> = U60Repr { limbs: [0; 2 * N] };\n\n    let mut carry_in: u64 = 0;\n    let mut borrow_in: u64 = 0;\n    let mut borrow_flags: [bool; N] = [false; N];\n    let mut carry_flags: [bool; N] = [false; N];\n    for i in 0..2 * N {\n        let mut add_term: u64 = a_u60.limbs[i] + carry_in;\n        let mut carry = (add_term >= TWO_POW_60) as u64;\n        add_term -= carry * TWO_POW_60;\n        carry_in = carry;\n\n        let sub_term = b_u60.limbs[i] + borrow_in;\n        let mut borrow = (sub_term > add_term) as u64;\n        result_u60.limbs[i] = borrow * TWO_POW_60 + add_term - sub_term;\n\n        borrow_in = borrow;\n\n        if ((i & 1) == 1) {\n            if (carry & borrow == 1) {\n                carry = 0;\n                borrow = 0;\n            }\n            carry_flags[i / 2] = carry as bool;\n            borrow_flags[i / 2] = borrow as bool;\n        }\n    }\n    let result = U60Repr::into(result_u60);\n    (result, carry_flags, borrow_flags)\n}\n\npub(crate) unconstrained fn __neg_with_flags<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [Field; N],\n) -> ([Field; N], [bool; N]) {\n    let x_u60: U60Repr<N, 2> = U60Repr::from(val);\n    let mut result_u60: U60Repr<N, 2> = U60Repr { limbs: [0; 2 * N] };\n\n    let mut borrow_in: u64 = 0;\n\n    let mut borrow_flags: [bool; N] = [false; N];\n    for i in 0..2 * N {\n        let sub_term = x_u60.limbs[i] + borrow_in;\n        let borrow = (sub_term > params.modulus_u60.limbs[i]) as u64;\n        result_u60.limbs[i] = borrow * TWO_POW_60 + params.modulus_u60.limbs[i] - sub_term;\n\n        borrow_in = borrow;\n        if ((i & 1) == 1) {\n            borrow_flags[i / 2] = borrow as bool;\n        }\n    }\n    let result = U60Repr::into(result_u60);\n    (result, borrow_flags)\n}\n\npub(crate) unconstrained fn __add_with_flags<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [Field; N],\n    rhs: [Field; N],\n) -> ([Field; N], [bool; N], [bool; N], bool) {\n    let a_u60: U60Repr<N, 2> = U60Repr::from(lhs);\n    let b_u60: U60Repr<N, 2> = U60Repr::from(rhs);\n    let add_u60 = a_u60 + b_u60;\n\n    let overflow = add_u60.gte(params.modulus_u60);\n\n    let mut subtrahend_u60: U60Repr<N, 2> = U60Repr { limbs: [0; 2 * N] };\n    let mut result_u60: U60Repr<N, 2> = U60Repr { limbs: [0; 2 * N] };\n\n    if overflow {\n        subtrahend_u60 = params.modulus_u60;\n    }\n\n    let mut carry_in: u64 = 0;\n    let mut borrow_in: u64 = 0;\n    let mut borrow_flags: [bool; N] = [false; N];\n    let mut carry_flags: [bool; N] = [false; N];\n    for i in 0..2 * N {\n        let mut add_term: u64 = a_u60.limbs[i] + b_u60.limbs[i] + carry_in;\n        let mut carry = (add_term >= TWO_POW_60) as u64;\n        add_term -= carry * TWO_POW_60;\n        carry_in = carry;\n\n        let sub_term = subtrahend_u60.limbs[i] + borrow_in;\n        let mut borrow = (sub_term > add_term) as u64;\n        result_u60.limbs[i] = borrow * TWO_POW_60 + add_term - sub_term;\n        borrow_in = borrow;\n\n        if ((i & 1) == 1) {\n            let idx = (i - 1) / 2;\n            if (carry & borrow == 1) {\n                carry = 0;\n                borrow = 0;\n            }\n            carry_flags[idx] = carry as bool;\n            borrow_flags[idx] = borrow as bool;\n        }\n    }\n    let result = U60Repr::into(result_u60);\n\n    (result, carry_flags, borrow_flags, overflow)\n}\n\npub(crate) unconstrained fn __sub_with_flags<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [Field; N],\n    rhs: [Field; N],\n) -> ([Field; N], [bool; N], [bool; N], bool) {\n    let a_u60: U60Repr<N, 2> = U60Repr::from(lhs);\n    let b_u60: U60Repr<N, 2> = U60Repr::from(rhs);\n\n    let underflow = b_u60.gte(a_u60 + U60Repr::one());\n\n    let addend_u60: U60Repr<N, 2> = if underflow {\n        params.modulus_u60\n    } else {\n        U60Repr { limbs: [0; 2 * N] }\n    };\n    let mut result_u60: U60Repr<N, 2> = U60Repr { limbs: [0; 2 * N] };\n\n    let mut carry_in: u64 = 0;\n    let mut borrow_in: u64 = 0;\n    let mut borrow_flags: [bool; N] = [false; N];\n    let mut carry_flags: [bool; N] = [false; N];\n    for i in 0..2 * N {\n        let mut add_term: u64 = a_u60.limbs[i] + addend_u60.limbs[i] + carry_in;\n        let mut carry = (add_term >= TWO_POW_60) as u64;\n        add_term -= carry * TWO_POW_60;\n        carry_in = carry;\n\n        let sub_term = b_u60.limbs[i] + borrow_in;\n        let mut borrow = (sub_term > add_term) as u64;\n        result_u60.limbs[i] = borrow * TWO_POW_60 + add_term - sub_term;\n        borrow_in = borrow;\n\n        if ((i & 1) == 1) {\n            if (carry & borrow == 1) {\n                carry = 0;\n                borrow = 0;\n            }\n            carry_flags[i / 2] = carry as bool;\n            borrow_flags[i / 2] = borrow as bool;\n        }\n    }\n    let result = U60Repr::into(result_u60);\n    (result, carry_flags, borrow_flags, underflow)\n}\n\n/**\n * @brief BARRETT_REDUCTION_OVERFLOW_BITS defines how large an input to barrett reduction can be\n * @details maximum value = modulus^2 <<BARRETT_REDUCTION_OVERFLOW_BITS\n *          see __barrett_reduction for more details\n **/\ncomptime global BARRETT_REDUCTION_OVERFLOW_BITS: u32 = 4;\n\npub(crate) unconstrained fn __barrett_reduction<let N: u32>(\n    x: [Field; 2 * N],\n    redc_param: [Field; N],\n    k: u32,\n    modulus: [Field; N],\n    modulus_u60: U60Repr<N, 4>,\n) -> ([Field; N], [Field; N]) {\n    // for each i in 0..(N + N), adds x[i] * redc_param[j] to mulout[i + j] for each j in 0..N\n    let mut mulout: [Field; 3 * N] = [0; 3 * N];\n    for i in 0..(N + N) {\n        for j in 0..N {\n            mulout[i + j] += x[i] * redc_param[j];\n        }\n    }\n\n    mulout = split_bits::__normalize_limbs(mulout, 3 * N - 1);\n    let mulout_u60: U60Repr<N, 6> = U60Repr::new(mulout);\n\n    // When we apply the barrett reduction, the maximum value of the output will be\n    // <= p * (1 + x/2^{2k})\n    // where p = modulus,\n    //       x = reduction input\n    // if x > p * p, we need k to be larger than modulus_bits()\n    // we hardcode k = 4, which means that the maximum value of x is approx. 16 * p * p\n    // this should be larger than most values put into `evaluate_quadratic_expression`\n    // TODO: try and detect cases where x might be too large at comptime\n    // N.B. BARRETT_REDUCTION_OVERFLOW_BITS affects how `redc_param` is generated.\n    // `redc_param` = 2^{modulus_bits() * 2 + BARRETT_REDUCTION_OVERFLOW_BITS} / modulus\n    // NOTE: very niche edge case error that we need to be aware of:\n    //       N must be large enough to cover the modulus *plus* BARRETT_REDUCTION_OVERFLOW_BITS\n    //       i.e. a 359-bit prime needs (I think) 4 limbs to represent or we may overflow when calling __barrett_reduction\n    let mut quotient_u60 = mulout_u60.shr((k + k + BARRETT_REDUCTION_OVERFLOW_BITS));\n\n    // N.B. we assume that the shifted quotient cannot exceed 2 times original bit size.\n    //      (partial_quotient should be just slightly larger than the modulus, we could probably represent with a size N+1 array)\n    let partial_quotient_full: [Field; 3 * N] = quotient_u60.into_field_array();\n    let mut partial_quotient: [Field; 2 * N] = [0; 2 * N];\n    for i in 0..2 * N {\n        partial_quotient[i] = partial_quotient_full[i];\n    }\n    // quotient_mul_modulus can never exceed input value `x` so can fit into size-2 array\n    let mut quotient_mul_modulus: [Field; 2 * N] = [0; 2 * N];\n    let mut quotient_mul_modulus_normalized: [Field; 2 * N] = [0; 2 * N];\n    for j in 0..N {\n        for i in 0..(N + N - j) {\n            quotient_mul_modulus[i + j] += partial_quotient[i] * modulus[j];\n        }\n    }\n\n    for i in 0..(N + N) {\n        let (lo, hi) = split_bits::split_120_bits(quotient_mul_modulus[i]);\n        quotient_mul_modulus_normalized[i] = lo;\n        // TODO: what is faster, leaving this if statement in or out?\n        // (array is size-1 too large so we can tolerate adding 0 into max element)\n        if (i + 1 < N + N) {\n            quotient_mul_modulus[i + 1] += hi;\n        }\n    }\n    let quotient_mul_modulus_u60: U60Repr<N, 4> = U60Repr::new(quotient_mul_modulus_normalized);\n\n    // convert the input into U60Repr\n    let x_u60: U60Repr<N, 4> = U60Repr::new(x);\n    let mut remainder_u60 = x_u60 - quotient_mul_modulus_u60;\n    // barrett reduction is quircky so might need to remove a few modulus_u60 from the remainder\n    if (remainder_u60.gte(modulus_u60)) {\n        remainder_u60 = remainder_u60 - modulus_u60;\n        quotient_u60.increment();\n    } else {}\n    if (remainder_u60.gte(modulus_u60)) {\n        remainder_u60 = remainder_u60 - modulus_u60;\n        quotient_u60.increment();\n    }\n    if (remainder_u60.gte(modulus_u60)) {\n        remainder_u60 = remainder_u60 - modulus_u60;\n        quotient_u60.increment();\n    }\n\n    let q: [Field; N] = U60Repr::into(quotient_u60);\n    let r: [Field; N] = U60Repr::into(remainder_u60);\n\n    (q, r)\n}\n\n/**\n* @brief compute the log of the size of the primitive root\n* @details find the maximum value k where x^k = 1, where x = primitive root\n*          This is needed for our Tonelli-Shanks sqrt algorithm\n**/\npub(crate) unconstrained fn __primitive_root_log_size<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n) -> u32 {\n    let mut target: U60Repr<N, 2> = params.modulus_u60 - U60Repr::one();\n    let mut result: u32 = 0;\n    for _ in 0..MOD_BITS {\n        let lsb_is_one = (target.limbs[0] & 1) == 1;\n        if (!lsb_is_one) {\n            result += 1;\n            target.shr1();\n        } else {\n            break;\n        }\n    }\n    result\n}\n\n/**\n* @brief inner loop fn for `find_multiplive_generator`\n* @details recursive function to get around the lack of a `while` keyword\n**/\nunconstrained fn __recursively_find_multiplicative_generator<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    target: [Field; N],\n    p_minus_one_over_two: [Field; N],\n) -> (bool, [Field; N]) {\n    let exped = __pow(params, target, p_minus_one_over_two);\n    let one: [Field; N] = __one();\n    let neg_one = __neg(params, one);\n    let found = __eq(exped, neg_one);\n    let mut result: (bool, [Field; N]) = (found, target);\n    if (!found) {\n        let _target = unsafe { __add(params, target, one) };\n        result = __recursively_find_multiplicative_generator::<_, MOD_BITS>(\n            params,\n            _target,\n            p_minus_one_over_two,\n        );\n    }\n    result\n}\n\n/**\n* @brief find multiplicative generator `g` where `g` is the smallest value that is not a quadratic residue\n*        i.e. smallest g where g^2 = -1\n* @note WARNING if multiplicative generator does not exist, this function will enter an infinite loop!\n**/\npub(crate) unconstrained fn __multiplicative_generator<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n) -> [Field; N] {\n    let mut target: [Field; N] = __one();\n    let p_minus_one_over_two: U60Repr<N, 2> = (params.modulus_u60 - U60Repr::one()).shr(1);\n    let p_minus_one_over_two: [Field; N] = U60Repr::into(p_minus_one_over_two);\n    let (_, target) = __recursively_find_multiplicative_generator::<_, MOD_BITS>(\n        params,\n        target,\n        p_minus_one_over_two,\n    );\n    target\n}\n\npub(crate) unconstrained fn __tonelli_shanks_sqrt_inner_loop_check<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    t2m: [Field; N],\n    i: u32,\n) -> u32 {\n    let one: [Field; N] = __one();\n    let is_one = __eq(t2m, one);\n    let mut result = i;\n    if (!is_one) {\n        let t2m = __mul::<_, MOD_BITS>(params, t2m, t2m);\n        let i = i + 1;\n        result = __tonelli_shanks_sqrt_inner_loop_check::<_, MOD_BITS>(params, t2m, i);\n    }\n    result\n}\n", "path": "/Users/saleel/nargo/github.com/noir-lang/noir-bignumv0.4.1/src/fns/unconstrained_helpers.nr" }, "88": { "source": "global TWO_POW_56: u64 = 0x100000000000000;\nglobal TWO_POW_60: u64 = 0x1000000000000000;\nglobal TWO_POW_64: Field = 0x10000000000000000;\n\n// Decomposes a single field into two 120 bit fields\npub unconstrained fn split_120_bits(mut x: Field) -> (Field, Field) {\n    // Here we're taking advantage of truncating 64 bit limbs from the input field\n    // and then subtracting them from the input such that the field division is equivalent to integer division.\n    let low_lower_64 = (x as u64) as Field;\n    x = (x - low_lower_64) / TWO_POW_64;\n    let low_upper_56 = ((x as u64) % TWO_POW_56) as Field;\n\n    let low = low_lower_64 + TWO_POW_64 * low_upper_56;\n    let high = (x - low_upper_56) / TWO_POW_56 as Field;\n\n    (low, high)\n}\n\n/**\n * @brief Decomposes a single field into two 60 bit fields\n *\n * @description Expects the input limb to be in the range [0, ..., 2^{120 - 1}]\n **/\npub unconstrained fn split_60_bits(x: Field) -> (u64, u64) {\n    // Here we're taking advantage of truncating 64 bit limbs from the input field\n    // and then subtracting them from the input such that the field division is equivalent to integer division.\n    let x_lower_64 = (x as u64);\n    let low = x_lower_64 % TWO_POW_60;\n    let high = ((x - (low as Field)) / TWO_POW_60 as Field) as u64;\n\n    (low, high)\n}\n\npub(crate) unconstrained fn __normalize_limbs<let N: u32>(\n    input: [Field; N],\n    range: u32,\n) -> [Field; N] {\n    let mut normalized: [Field; N] = [0; N];\n    let mut inp: _ = input;\n    for i in 0..(range - 1) {\n        let (lo, hi) = split_120_bits(inp[i]);\n\n        normalized[i] = lo;\n        inp[i + 1] += hi;\n    }\n    {\n        let (lo, hi) = split_120_bits(inp[range - 1]);\n        normalized[range - 1] = lo;\n        assert(hi == 0);\n    }\n    normalized\n}\n", "path": "/Users/saleel/nargo/github.com/noir-lang/noir-bignumv0.4.1/src/utils/split_bits.nr" }, "89": { "source": "use crate::utils::msb::get_msb64;\nuse crate::utils::split_bits;\n\n/**\n * @brief U60Repr represents a BigNum element as a sequence of 60-bit unsigned integers.\n *\n * @description: used in unconstrained functions when computing witness values.\n * It is helpful to use u60 types when evaluating addition operations that can overflow the field modulus,\n * as well as when performing bit shifts.\n */\npub struct U60Repr<let N: u32, let NumSegments: u32> {\n    pub(crate) limbs: [u64; N * NumSegments],\n}\n\nimpl<let N: u32, let NumSegments: u32> std::ops::Add for U60Repr<N, NumSegments> {\n    fn add(self, b: Self) -> Self {\n        let mut result: Self = U60Repr { limbs: [0; N * NumSegments] };\n\n        let mut carry: u64 = 0;\n        for i in 0..N * NumSegments {\n            let mut add: u64 = self.limbs[i] + b.limbs[i] + carry;\n            carry = add >> 60;\n            add = add - (carry << 60);\n            result.limbs[i] = add;\n        }\n        result\n    }\n}\n\nimpl<let N: u32, let NumSegments: u32> std::ops::Sub for U60Repr<N, NumSegments> {\n    fn sub(self, b: Self) -> Self {\n        let mut result: Self = U60Repr { limbs: [0; N * NumSegments] };\n\n        let mut borrow: u64 = 0;\n        let mut borrow_in: u64 = 0;\n\n        for i in 0..N * NumSegments {\n            borrow = ((b.limbs[i] + borrow_in) > self.limbs[i]) as u64;\n            let sub = (borrow << 60) + self.limbs[i] - b.limbs[i] - borrow_in;\n            result.limbs[i] = sub;\n            borrow_in = borrow;\n        }\n\n        result\n    }\n}\n\nimpl<let N: u32, let NumSegments: u32> std::convert::From<[Field; N]> for U60Repr<N, NumSegments> {\n    fn from(input: [Field; N]) -> Self {\n        let mut result: Self = U60Repr { limbs: [0; N * NumSegments] };\n        for i in 0..(N) {\n            let (lo, hi) = unsafe { split_bits::split_60_bits(input[i]) };\n            result.limbs[2 * i] = lo;\n            result.limbs[2 * i + 1] = hi;\n        }\n        result\n    }\n}\n\nimpl<let N: u32, let NumSegments: u32> std::convert::Into<[Field; N]> for U60Repr<N, NumSegments> {\n    fn into(x: U60Repr<N, NumSegments>) -> [Field; N] {\n        let mut result: [Field; N] = [0; N];\n        let two_pow_60: Field = 0x1000000000000000;\n        for i in 0..N {\n            result[i] = x.limbs[2 * i] as Field + (x.limbs[2 * i + 1] as Field * two_pow_60);\n        }\n        result\n    }\n}\n\nimpl<let N: u32, let NumSegments: u32> std::cmp::Eq for U60Repr<N, NumSegments> {\n    fn eq(self, other: Self) -> bool {\n        self.limbs == other.limbs\n    }\n}\n\nimpl<let N: u32, let NumSegments: u32> U60Repr<N, NumSegments> {\n\n    pub(crate) unconstrained fn new<let NumFieldSegments: u32>(\n        x: [Field; N * NumFieldSegments],\n    ) -> Self {\n        let mut result: Self = U60Repr { limbs: [0; N * NumSegments] };\n        for i in 0..(N * NumFieldSegments) {\n            let (lo, hi) = split_bits::split_60_bits(x[i]);\n            result.limbs[2 * i] = lo;\n            result.limbs[2 * i + 1] = hi;\n        }\n        result\n    }\n\n    pub(crate) unconstrained fn one() -> Self {\n        let mut result: Self = U60Repr { limbs: [0; N * NumSegments] };\n        result.limbs[0] = 1;\n        result\n    }\n\n    pub(crate) unconstrained fn into_field_array(\n        x: U60Repr<N, NumSegments>,\n    ) -> [Field; N * NumSegments / 2] {\n        let mut result: [Field; N * NumSegments / 2] = [0; N * NumSegments / 2];\n        let two_pow_60: Field = 0x1000000000000000;\n        for i in 0..(N * NumSegments / 2) {\n            result[i] = x.limbs[2 * i] as Field + (x.limbs[2 * i + 1] as Field * two_pow_60);\n        }\n        result\n    }\n\n    pub(crate) unconstrained fn gte(self, b: Self) -> bool {\n        let mut result = false;\n        let mut early_exit = false;\n        for i in 0..(N * NumSegments) {\n            if (b.limbs[(N * NumSegments) - 1 - i] < self.limbs[((N * NumSegments) - 1 - i)]) {\n                result = true;\n                early_exit = true;\n                break;\n            } else if (\n                b.limbs[(N * NumSegments) - 1 - i] != self.limbs[((N * NumSegments) - 1 - i)]\n            ) {\n                result = false;\n                early_exit = true;\n                break;\n            }\n        }\n        if (early_exit == false) {\n            result = (self.limbs[0] == b.limbs[0]);\n        }\n        result\n    }\n\n    pub(crate) fn get_bit(self, bit: u32) -> bool {\n        let segment_index = bit / 60;\n        let uint_index = bit % 60;\n\n        let limb: u64 = self.limbs[segment_index];\n        let value = (limb >> uint_index as u8) & 1;\n        value == 1\n    }\n\n    // note: shr cannot satisfy `Shr` Trait due to `shift` parameter being u64 and not u8 (shift value might be greater than 255)\n    pub(crate) fn shr(self, shift: u32) -> Self {\n        let mut result: Self = U60Repr { limbs: [0; N * NumSegments] };\n\n        let num_shifted_limbs = shift / 60;\n        let limb_shift = shift % 60;\n        let remainder_shift = 60 - limb_shift;\n        let mask: u64 = (((1 as u64) << limb_shift as u8) - 1) << remainder_shift as u8;\n        result.limbs[0] = (self.limbs[0 + num_shifted_limbs] >> limb_shift as u8);\n\n        for i in 1..((N * NumSegments) - num_shifted_limbs) {\n            let value = self.limbs[i + num_shifted_limbs];\n            result.limbs[i] = (value >> limb_shift as u8);\n            let remainder: u64 = (value << remainder_shift as u8) & mask;\n            result.limbs[i - 1] = result.limbs[i - 1] + remainder;\n        }\n        result\n    }\n\n    // note: shr cannot satisfy `Shr` Trait due to `shift` parameter being u64 and not u8 (shift value might be greater than 255)\n    pub(crate) fn shr1(&mut self) {\n        let value = self.limbs[NumSegments * N - 1];\n        self.limbs[NumSegments * N - 1] = value >> 1;\n\n        let mut remainder = (value & 1) << 59;\n\n        for i in 0..N * NumSegments {\n            let value = self.limbs[N * NumSegments - 1 - i];\n            self.limbs[N * NumSegments - 1 - i] = (value >> 1) + remainder;\n            remainder = (value << 59) & 0x800000000000000;\n        }\n    }\n\n    // note: shr cannot satisfy `Shr` Trait due to `shift` parameter being u64 and not u8 (shift value might be greater than 255)\n    pub(crate) fn shl(self, shift: u32) -> Self {\n        let mut result: Self = U60Repr { limbs: [0; NumSegments * N] };\n\n        let num_shifted_limbs = shift / 60;\n        let limb_shift = (shift % 60) as u8;\n        let remainder_shift: u8 = 60 - limb_shift as u8;\n\n        // 83\n        // limb shift = 1\n        // inside shift = 19 bits to the left\n        // meaning we have 19 carry bits and 41 remainder bits\n        let mask: u64 = (1 as u64 << 60) - 1;\n        //   let mask: u64 = (((1 as u64) << limb_shift as u8) - 1) << remainder_shift as u8;\n        let value = self.limbs[0];\n\n        let mut remainder = (value >> remainder_shift);\n        result.limbs[num_shifted_limbs] = (value << (limb_shift as u8)) & mask;\n\n        // shift 84. num shifted = 1\n        for i in 1..((N * NumSegments) - num_shifted_limbs) {\n            let value = self.limbs[i];\n            let upshift = ((value << (limb_shift as u8)) + remainder) & mask;\n            result.limbs[i + num_shifted_limbs] = upshift;\n            remainder = (value >> remainder_shift);\n            // let remainder: u64 = (self.limbs.get(i + num_shifted_limbs as u64) << remainder_shift as u8) & mask;\n            // result.limbs.set(i - 1, result.limbs.get(i - 1) + remainder);\n        }\n        result\n    }\n\n    pub(crate) fn increment(&mut self) {\n        let mut carry: u64 = 0;\n\n        let mut add: u64 = self.limbs[0] + 1;\n        carry = add >> 60;\n        add = add - (carry << 60);\n        self.limbs[0] = add;\n\n        for i in 1..NumSegments * N {\n            let mut add: u64 = self.limbs[i] + carry;\n            carry = add >> 60;\n            add = add - (carry << 60);\n            self.limbs[i] = add;\n        }\n    }\n\n    pub(crate) unconstrained fn get_msb(val: Self) -> u32 {\n        let mut count = 0;\n        for i in 0..N * NumSegments {\n            let v = val.limbs[((N * NumSegments) - 1 - i)];\n            if (v > 0) {\n                count = 60 * ((N * NumSegments) - 1 - i) + get_msb64(v);\n                break;\n            }\n        }\n        count\n    }\n}\n", "path": "/Users/saleel/nargo/github.com/noir-lang/noir-bignumv0.4.1/src/utils/u60_representation.nr" }, "124": { "source": "use crate::params::BigNumParams;\nuse crate::utils::map::map;\n\nuse crate::fns::{\n    constrained_ops::{\n        add, assert_is_not_equal, conditional_select, derive_from_seed, div, eq, mul, neg, sub,\n        udiv, udiv_mod, umod, validate_in_field, validate_in_range,\n    }, expressions::{__compute_quadratic_expression, evaluate_quadratic_expression},\n    serialization::{from_be_bytes, to_le_bytes},\n    unconstrained_ops::{\n        __add, __batch_invert, __batch_invert_slice, __derive_from_seed, __div, __eq, __invmod,\n        __is_zero, __mul, __neg, __pow, __sub, __tonelli_shanks_sqrt, __udiv_mod,\n    },\n};\n\npub struct RuntimeBigNum<let N: u32, let MOD_BITS: u32> {\n    pub limbs: [Field; N],\n    pub params: BigNumParams<N, MOD_BITS>,\n}\n\nimpl<let N: u32, let MOD_BITS: u32> RuntimeBigNum<N, MOD_BITS> {}\n\n// All functions prefixed `__` are unconstrained!\n// They're not actually decorated as `unconstrained` because to return the `params` (as part of Self) from an `unconstrained` fn would cause range constraints. Instead, each `__` fn wraps a call to an unconstrained fn, so that the already-range-constrained `params` can be inserted into Self after the unconstrained call.\npub(crate) trait RuntimeBigNumTrait<let N: u32, let MOD_BITS: u32> {\n    pub fn new(params: BigNumParams<N, MOD_BITS>) -> Self;\n    pub fn one(params: BigNumParams<N, MOD_BITS>) -> Self;\n    pub fn derive_from_seed<let SeedBytes: u32>(\n        params: BigNumParams<N, MOD_BITS>,\n        seed: [u8; SeedBytes],\n    ) -> Self;\n    pub fn __derive_from_seed<let SeedBytes: u32>(\n        params: BigNumParams<N, MOD_BITS>,\n        seed: [u8; SeedBytes],\n    ) -> Self;\n    pub fn from_slice(params: BigNumParams<N, MOD_BITS>, limbs: [Field]) -> Self;\n    pub fn from_array(params: BigNumParams<N, MOD_BITS>, limbs: [Field; N]) -> Self;\n    pub fn from_be_bytes<let NBytes: u32>(\n        params: BigNumParams<N, MOD_BITS>,\n        x: [u8; NBytes],\n    ) -> Self;\n\n    pub fn to_le_bytes<let NBytes: u32>(self) -> [u8; NBytes];\n\n    pub fn modulus(self) -> Self;\n    pub fn modulus_bits() -> u32;\n    pub fn num_limbs() -> u32;\n    // pub fn get(self) -> [Field];\n    pub fn get_limbs(self) -> [Field; N];\n    pub fn get_limb(self, idx: u32) -> Field;\n    pub fn set_limb(&mut self, idx: u32, value: Field);\n\n    unconstrained fn __eq(self, other: Self) -> bool;\n    unconstrained fn __is_zero(self) -> bool;\n\n    // unconstrained\n    pub fn __neg(self) -> Self;\n    // unconstrained\n    pub fn __add(self, other: Self) -> Self;\n    // unconstrained\n    pub fn __sub(self, other: Self) -> Self;\n    // unconstrained\n    pub fn __mul(self, other: Self) -> Self;\n    // unconstrained\n    pub fn __div(self, other: Self) -> Self;\n    // unconstrained\n    pub fn __udiv_mod(self, divisor: Self) -> (Self, Self);\n    // unconstrained\n    pub fn __invmod(self) -> Self;\n    // unconstrained\n    pub fn __pow(self, exponent: Self) -> Self;\n\n    // unconstrained\n    pub fn __batch_invert<let M: u32>(x: [Self; M]) -> [Self; M];\n    unconstrained fn __batch_invert_slice<let M: u32>(to_invert: [Self]) -> [Self];\n\n    pub fn __tonelli_shanks_sqrt(self) -> std::option::Option<Self>;\n\n    // unconstrained\n    pub fn __compute_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        params: BigNumParams<N, MOD_BITS>,\n        lhs_terms: [[Self; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[Self; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [Self; ADD_N],\n        linear_flags: [bool; ADD_N],\n    ) -> (Self, Self);\n\n    pub fn evaluate_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        params: BigNumParams<N, MOD_BITS>,\n        lhs_terms: [[Self; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[Self; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [Self; ADD_N],\n        linear_flags: [bool; ADD_N],\n    );\n\n    pub fn eq(lhs: Self, rhs: Self) -> bool {\n        lhs == rhs\n    }\n    pub fn assert_is_not_equal(self, other: Self);\n    pub fn validate_in_field(self);\n    pub fn validate_in_range(self);\n    // pub fn validate_gt(self, lhs: Self, rhs: Self);\n\n    pub fn neg(self) -> Self;\n    pub fn add(lhs: Self, rhs: Self) -> Self {\n        lhs + rhs\n    }\n    pub fn sub(lhs: Self, rhs: Self) -> Self {\n        lhs - rhs\n    }\n    pub fn mul(lhs: Self, rhs: Self) -> Self {\n        lhs * rhs\n    }\n    pub fn div(lhs: Self, rhs: Self) -> Self {\n        lhs / rhs\n    }\n    pub fn udiv_mod(numerator: Self, divisor: Self) -> (Self, Self);\n    pub fn udiv(numerator: Self, divisor: Self) -> Self;\n    pub fn umod(numerator: Self, divisor: Self) -> Self;\n\n    pub fn conditional_select(lhs: Self, rhs: Self, predicate: bool) -> Self;\n}\n\nimpl<let N: u32, let MOD_BITS: u32> RuntimeBigNumTrait<N, MOD_BITS> for RuntimeBigNum<N, MOD_BITS> {\n\n    fn new(params: BigNumParams<N, MOD_BITS>) -> Self {\n        let limbs: [Field; N] = [0; N];\n        Self { limbs, params }\n    }\n\n    fn one(params: BigNumParams<N, MOD_BITS>) -> Self {\n        let mut result = RuntimeBigNum::new(params);\n        result.limbs[0] = 1;\n        result\n    }\n\n    fn derive_from_seed<let SeedBytes: u32>(\n        params: BigNumParams<N, MOD_BITS>,\n        seed: [u8; SeedBytes],\n    ) -> Self {\n        let limbs = unsafe { derive_from_seed::<_, MOD_BITS, _>(params, seed) };\n        Self { limbs, params }\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    fn __derive_from_seed<let SeedBytes: u32>(\n        params: BigNumParams<N, MOD_BITS>,\n        seed: [u8; SeedBytes],\n    ) -> Self {\n        let limbs = unsafe { __derive_from_seed::<_, MOD_BITS, _>(params, seed) };\n        Self { limbs, params }\n    }\n\n    fn from_slice(params: BigNumParams<N, MOD_BITS>, limbs: [Field]) -> Self {\n        Self { limbs: limbs.as_array(), params }\n    }\n\n    fn from_array(params: BigNumParams<N, MOD_BITS>, limbs: [Field; N]) -> Self {\n        Self { limbs, params }\n    }\n\n    fn from_be_bytes<let NBytes: u32>(params: BigNumParams<N, MOD_BITS>, x: [u8; NBytes]) -> Self {\n        Self { limbs: from_be_bytes::<_, MOD_BITS, _>(x), params }\n    }\n\n    fn to_le_bytes<let NBytes: u32>(self) -> [u8; NBytes] {\n        to_le_bytes::<_, MOD_BITS, _>(self.limbs)\n    }\n\n    fn modulus(self) -> Self {\n        let params = self.params;\n        Self { limbs: params.modulus, params }\n    }\n\n    fn modulus_bits() -> u32 {\n        MOD_BITS\n    }\n\n    fn num_limbs() -> u32 {\n        N\n    }\n\n    // fn get(self) -> [Field] {\n    //     self.get_limbs()\n    // }\n\n    fn get_limbs(self) -> [Field; N] {\n        self.limbs\n    }\n\n    fn get_limb(self, idx: u32) -> Field {\n        self.limbs[idx]\n    }\n\n    fn set_limb(&mut self, idx: u32, value: Field) {\n        self.limbs[idx] = value;\n    }\n\n    unconstrained fn __eq(self, other: Self) -> bool {\n        assert(self.params == other.params);\n        __eq(self.limbs, other.limbs)\n    }\n\n    unconstrained fn __is_zero(self) -> bool {\n        __is_zero(self.limbs)\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    fn __neg(self) -> Self {\n        let params = self.params;\n        let limbs = unsafe { __neg(params, self.limbs) };\n        Self { params, limbs }\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    fn __add(self, other: Self) -> Self {\n        let params = self.params;\n        assert(params == other.params);\n        let limbs = unsafe { __add(params, self.limbs, other.limbs) };\n        Self { params, limbs }\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    fn __sub(self, other: Self) -> Self {\n        let params = self.params;\n        assert(params == other.params);\n        let limbs = unsafe { __sub(params, self.limbs, other.limbs) };\n        Self { params, limbs }\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    fn __mul(self, other: Self) -> Self {\n        let params = self.params;\n        assert(params == other.params);\n        let limbs = unsafe { __mul::<_, MOD_BITS>(params, self.limbs, other.limbs) };\n        Self { params, limbs }\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    fn __div(self, divisor: Self) -> Self {\n        let params = self.params;\n        assert(params == divisor.params);\n        let limbs = unsafe { __div::<_, MOD_BITS>(params, self.limbs, divisor.limbs) };\n        Self { params, limbs }\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    fn __udiv_mod(self, divisor: Self) -> (Self, Self) {\n        let params = self.params;\n        assert(params == divisor.params);\n        let (q, r) = unsafe { __udiv_mod(self.limbs, divisor.limbs) };\n        (Self { limbs: q, params }, Self { limbs: r, params })\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    fn __invmod(self) -> Self {\n        let params = self.params;\n        assert(params.has_multiplicative_inverse);\n        let limbs = unsafe { __invmod::<_, MOD_BITS>(params, self.limbs) };\n        Self { limbs, params }\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    fn __pow(self, exponent: Self) -> Self {\n        let params = self.params;\n        assert(params == exponent.params);\n        let limbs = unsafe { __pow::<_, MOD_BITS>(params, self.limbs, exponent.limbs) };\n        Self { limbs, params }\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    fn __batch_invert<let M: u32>(x: [Self; M]) -> [Self; M] {\n        let params = x[0].params;\n        assert(params.has_multiplicative_inverse);\n        let all_limbs =\n            unsafe { __batch_invert::<_, MOD_BITS, _>(params, x.map(|bn| Self::get_limbs(bn))) };\n        all_limbs.map(|limbs| Self { limbs, params })\n    }\n\n    // Note: can't return a slice from this unconstrained to a constrained function.\n    unconstrained fn __batch_invert_slice<let M: u32>(x: [Self]) -> [Self] {\n        let params = x[0].params;\n        assert(params.has_multiplicative_inverse);\n        let all_limbs = unsafe {\n            let inv_slice =\n                __batch_invert_slice::<_, MOD_BITS>(params, x.map(|bn| Self::get_limbs(bn)));\n            inv_slice.as_array()\n        };\n        all_limbs.map(|limbs| Self { limbs, params })\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    fn __tonelli_shanks_sqrt(self) -> std::option::Option<Self> {\n        let params = self.params;\n        let maybe_limbs = unsafe { __tonelli_shanks_sqrt(params, self.limbs) };\n        maybe_limbs.map(|limbs| Self { limbs, params })\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    fn __compute_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        params: BigNumParams<N, MOD_BITS>,\n        lhs_terms: [[Self; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[Self; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [Self; ADD_N],\n        linear_flags: [bool; ADD_N],\n    ) -> (Self, Self) {\n        let (q_limbs, r_limbs) = unsafe {\n            __compute_quadratic_expression::<_, MOD_BITS, _, _, _, _>(\n                params,\n                map(lhs_terms, |bns| map(bns, |bn| Self::get_limbs(bn))),\n                lhs_flags,\n                map(rhs_terms, |bns| map(bns, |bn| Self::get_limbs(bn))),\n                rhs_flags,\n                map(linear_terms, |bn| Self::get_limbs(bn)),\n                linear_flags,\n            )\n        };\n        (Self { limbs: q_limbs, params }, Self { limbs: r_limbs, params })\n    }\n\n    fn evaluate_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        params: BigNumParams<N, MOD_BITS>,\n        lhs_terms: [[Self; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[Self; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [Self; ADD_N],\n        linear_flags: [bool; ADD_N],\n    ) {\n        evaluate_quadratic_expression::<_, MOD_BITS, _, _, _, _>(\n            params,\n            map(lhs_terms, |bns| map(bns, |bn| Self::get_limbs(bn))),\n            lhs_flags,\n            map(rhs_terms, |bns| map(bns, |bn| Self::get_limbs(bn))),\n            rhs_flags,\n            map(linear_terms, |bn| Self::get_limbs(bn)),\n            linear_flags,\n        )\n    }\n\n    fn validate_in_field(self: Self) {\n        let params = self.params;\n        validate_in_field::<_, MOD_BITS>(params, self.limbs);\n    }\n\n    fn validate_in_range(self) {\n        validate_in_range::<_, MOD_BITS>(self.limbs);\n    }\n\n    fn assert_is_not_equal(self, other: Self) {\n        let params = self.params;\n        assert(params == other.params);\n        assert_is_not_equal(params, self.limbs, other.limbs);\n    }\n\n    fn neg(self) -> Self {\n        let params = self.params;\n        Self { limbs: neg::<_, MOD_BITS>(params, self.limbs), params }\n    }\n\n    fn udiv_mod(self, divisor: Self) -> (Self, Self) {\n        let params = self.params;\n        assert(params == divisor.params);\n        let (q, r) = udiv_mod::<_, MOD_BITS>(params, self.limbs, divisor.limbs);\n        (Self { limbs: q, params }, Self { limbs: r, params })\n    }\n\n    fn udiv(self, divisor: Self) -> Self {\n        let params = self.params;\n        assert(params == divisor.params);\n        Self { limbs: udiv::<_, MOD_BITS>(params, self.limbs, divisor.limbs), params }\n    }\n\n    fn umod(self, divisor: Self) -> Self {\n        let params = self.params;\n        assert(params == divisor.params);\n        Self { limbs: umod::<_, MOD_BITS>(params, self.limbs, divisor.limbs), params }\n    }\n\n    fn conditional_select(lhs: Self, rhs: Self, predicate: bool) -> Self {\n        let params = lhs.params;\n        assert(params == rhs.params);\n        Self { limbs: conditional_select(lhs.limbs, rhs.limbs, predicate), params }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32> std::ops::Add for RuntimeBigNum<N, MOD_BITS> {\n    // Note: this method is expensive! Try to craft quadratic relations and directly evaluate them\n    //       via evaluate_quadratic_expression\n    fn add(self, other: Self) -> Self {\n        let params = self.params;\n        assert(params == other.params);\n        Self { limbs: add::<_, MOD_BITS>(params, self.limbs, other.limbs), params }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32> std::ops::Sub for RuntimeBigNum<N, MOD_BITS> {\n    // Note: this method is expensive! Try to craft quadratic relations and directly evaluate them\n    //       via evaluate_quadratic_expression\n    fn sub(self, other: Self) -> Self {\n        let params = self.params;\n        assert(params == other.params);\n        Self { limbs: sub::<_, MOD_BITS>(params, self.limbs, other.limbs), params }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32> std::ops::Mul for RuntimeBigNum<N, MOD_BITS> {\n    // Note: this method is expensive! Try to craft quadratic relations and directly evaluate them\n    //       via evaluate_quadratic_expression\n    // e.g. performing a sum of multiple multiplications and additions via `evaluate_quadratic_expression`\n    //      will create much fewer constraints than calling `mul` and `add` directly\n    fn mul(self, other: Self) -> Self {\n        let params = self.params;\n        assert(params == other.params);\n        Self { limbs: mul::<_, MOD_BITS>(params, self.limbs, other.limbs), params }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32> std::ops::Div for RuntimeBigNum<N, MOD_BITS> {\n    // Note: this method is expensive! Witness computation is extremely expensive as it requires modular exponentiation\n    fn div(self, divisor: Self) -> Self {\n        let params = self.params;\n        assert(params == divisor.params);\n        Self { limbs: div::<_, MOD_BITS>(params, self.limbs, divisor.limbs), params }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32> std::cmp::Eq for RuntimeBigNum<N, MOD_BITS> {\n    fn eq(self, other: Self) -> bool {\n        let params = self.params;\n        assert(params == other.params);\n        eq::<_, MOD_BITS>(params, self.limbs, other.limbs)\n    }\n}\n", "path": "/Users/saleel/nargo/github.com/noir-lang/noir-bignumv0.4.1/src/runtime_bignum.nr" }, "136": { "source": "use dep::bignum::{params::BigNumParams, RuntimeBigNum};\n\n/**\n * @brief Compare a recovered byte hash from an RSA signature to the original message hash\n * @details Taken from https://github.com/richardliang/noir-rsa\n **/\nfn compare_signature_sha256<let N: u32>(padded_sha256_hash: [u8; N], msg_hash: [u8; 32]) -> bool {\n    // Get length of sig (e.g. 1048 = 128 bytes, 2048 = 256 bytes)\n    // NOTE: Assume MAX_BYTES < 2^32 bit number. MAX_BYTES of 259 > 2^8 bits so need to cast it to u32\n    for i in 0..32 {\n        // Padded hash is reversed\n        assert(padded_sha256_hash[31 - i] == msg_hash[i]);\n    }\n\n    let hash_prefix: [u8; 19] =\n        [32, 4, 0, 5, 1, 2, 4, 3, 101, 1, 72, 134, 96, 9, 6, 13, 48, 49, 48];\n\n    for i in 32..51 {\n        assert(hash_prefix[i - 32] == padded_sha256_hash[i]);\n    }\n\n    assert(padded_sha256_hash[51] == 0);\n\n    // Sub 32 bytes for hash, 19 bytes for prefix, 1 byte for 0, 1 byte for 1, 1 byte for 0\n    let ps_len = N - 54;\n    for i in 52..N {\n        if i < 52 + ps_len {\n            // PS padding which depends on RSA modulus / sig length. 1024 bits = 128 bytes = 128 - 54 = 74 bytes of 0xFF padding\n            assert(padded_sha256_hash[i] == 255);\n        } else if i == 52 + ps_len {\n            // Pad 0x01\n            assert(padded_sha256_hash[i] == 1);\n        } else if i == 53 + ps_len {\n            // 0x00\n            assert(padded_sha256_hash[i] == 0);\n        } else {\n            // Padded with 0 until MAX_BYTES\n            assert(padded_sha256_hash[i] == 0);\n        }\n    }\n\n    true\n}\n\n/**\n * @brief Verify an RSA signature generated via the pkcs1v15 signature scheme.\n * @note The `exponent` can be either 65537 or 3 (i.e. the most common values in use for RSA)\n * Rough cost: 2,048 bit RSA: 26,888 gates per verification\n *             1,024 bit RSA: 11,983 gates per verification\n * A circuit that verifies 1 signature (and does nothing else) will cost ~32k due to initialization costs of lookup tables\n **/\npub fn verify_sha256_pkcs1v15<let NumLimbs: u32, let ModBits: u32>(\n    msg_hash: [u8; 32],\n    sig: RuntimeBigNum<NumLimbs, ModBits>,\n    exponent: u32,\n) -> bool {\n    assert((exponent == 3) | (exponent == 65537), \"Exponent must be 65537 or 3\");\n    let mut exponentiated = sig * sig; // sig^2\n    if exponent == 65537 {\n        // e = 65537 = 1 0000 0000 0000 0001\n        exponentiated = exponentiated * exponentiated; // sig^4\n        exponentiated = exponentiated * exponentiated; // sig^8\n        exponentiated = exponentiated * exponentiated; // sig^16\n        exponentiated = exponentiated * exponentiated; // sig^32\n        exponentiated = exponentiated * exponentiated; // sig^64\n        exponentiated = exponentiated * exponentiated; // sig^128\n        exponentiated = exponentiated * exponentiated; // sig^256\n        exponentiated = exponentiated * exponentiated; // sig^512\n        exponentiated = exponentiated * exponentiated; // sig^1024\n        exponentiated = exponentiated * exponentiated; // sig^2048\n        exponentiated = exponentiated * exponentiated; // sig^4096\n        exponentiated = exponentiated * exponentiated; // sig^8192\n        exponentiated = exponentiated * exponentiated; // sig^16384\n        exponentiated = exponentiated * exponentiated; // sig^32768\n        exponentiated = exponentiated * exponentiated; // sig^65536\n    }\n    // otherwise, e = 3 = 11\n    exponentiated = exponentiated * sig; // either sig^2 * sig = sig^3 or sig^65536 * sig = sig^65537\n    let mut padded_sha256_hash_bytes: [u8; (ModBits + 7) / 8] = exponentiated.to_le_bytes();\n    compare_signature_sha256(padded_sha256_hash_bytes, msg_hash)\n}\n\n#[test]\nfn test_verify_sha256_pkcs1v15_1024() {\n    // Output of `cargo run -- --msg \"hello world! test#123\" --bits 1024` in the `signature_gen` directory\n    let sha256_hash: [u8; 32] = dep::std::hash::sha256(\"hello world! test#123\".as_bytes());\n    assert(\n        sha256_hash\n            == [\n                220, 155, 229, 143, 122, 133, 55, 215, 75, 44, 132, 111, 57, 33, 248, 84, 213, 170,\n                193, 96, 253, 57, 124, 13, 251, 42, 92, 147, 105, 172, 233, 85,\n            ],\n    );\n\n    let params: BigNumParams<9, 1024> = BigNumParams::new(\n        false,\n        [\n            0xab238ad9cb37979a43aefbf10be8fb,\n            0x31347febe45fe8c2dac1dd30900704,\n            0xa5a9a6b9cd0cc2b9d13bbd4e068263,\n            0x5eac6390f7873fe97ff9bb14a173ea,\n            0xbc41f700c91fd733a2c63177bbdbd4,\n            0x41442bd58769a3595b659a2ec9c6be,\n            0x4ddc91395f330382aa2e2d3fbe147,\n            0x3d008ff255a0bc71c7887f5728ba1,\n            0xb640c3a8f511c64e,\n        ],\n        [\n            0x5d53d2634c6a0918266043968ce263,\n            0x5dd4be3dce0323a492ee9340aec4db,\n            0xf82d0e2e5c8319f01a460c72c01854,\n            0x236e6fc6e62e8a1d522acda5fb3892,\n            0xdaf755619d66e580901aa224d03174,\n            0x8366291616480e7e1f202dbcedda87,\n            0x40ba1202537d1e94561ccc05265586,\n            0x69b993d857ba89ea5de9822aeb4b93,\n            0x167968c0000761a273,\n        ],\n    );\n\n    let signature: RuntimeBigNum<9, 1024> = RuntimeBigNum {\n        params,\n        limbs: [\n            0xc3850e84ea02da3f028ff422f4d6a9,\n            0x9761f0bd9021f76d45c60df0670a19,\n            0xc1ede421a43607ab623ed4d5a17fc8,\n            0x86197b4315206f4d53200b42555831,\n            0xe95783b69db28c26a83706f39d04cd,\n            0x18b178dc1a9ec76fb22b57e4dfa703,\n            0xdd0e19cd5a09ab48e7af4d0e3470e3,\n            0x10004dfab1cf91304e80e6baa4dfc7,\n            0x241c3fd77b90adef,\n        ],\n    };\n\n    assert(verify_sha256_pkcs1v15(sha256_hash, signature, 65537));\n}\n\n#[test]\nfn test_verify_sha256_pkcs1v15_2048() {\n    // Output of `cargo run -- --msg \"Hello World! This is Noir-RSA\"` in the `signature_gen` directory\n    let sha256_hash: [u8; 32] = dep::std::hash::sha256(\"Hello World! This is Noir-RSA\".as_bytes());\n    assert(\n        sha256_hash\n            == [\n                91, 207, 46, 60, 22, 153, 217, 144, 2, 127, 224, 143, 181, 45, 32, 120, 122, 131,\n                166, 79, 166, 183, 43, 158, 116, 105, 73, 207, 196, 77, 33, 5,\n            ],\n    );\n\n    let params: BigNumParams<18, 2048> = BigNumParams::new(\n        false,\n        [\n            0x8d5e7d9daedd6cfd1c9bdf0227e05b,\n            0xbfb937fc4d3cf02cc0af780f3cab44,\n            0xd20637ef7adcf5d238ee87bccc9bca,\n            0xb9db4f2663108e2f8b673f7612ae8b,\n            0x85f894ef669b36bfd3d86b0a28873,\n            0xdcc70e1884e38b8229cce3b884121d,\n            0x35488d1138e0b03e1676f7f5d8a5b3,\n            0xe1a97820e7dcbb4eab35c9b71bb273,\n            0x97d19eb3c63249ddbfcff915863f54,\n            0x3a78c7af6da0f6af0d67b1ca4b6065,\n            0xd7a3c433c020f624821e5e678c7d69,\n            0x52d5b53240feae82ffea3d2a3d9b09,\n            0xb8aad5e19e2163f68997c6fdd71906,\n            0x5db432d06e8b0bf59511100c7894e2,\n            0xadc0bbc4c54da10d1cc88438ea3127,\n            0xece1cf6a1501109cd2734d5893c8d9,\n            0x7196b90acdf06c31b1288064fd0c27,\n            0xc8,\n        ],\n        [\n            0x1b1deccf4dbde852c34a5d6908a0f,\n            0xbc9e5bdab22f023fbcca58692bccf5,\n            0x1f65439685623e45396ff55751c3bf,\n            0x2b6ad2c5f8e3aac15d0ccbab816bfa,\n            0x5ca2e8e3048243c16c708a8030ab0d,\n            0x30079bfeb1fa51e5501581173ca19c,\n            0xff8d5f6bea485fdcc2716327f69ab4,\n            0x36b599d81589416b5b5f037986b999,\n            0x75612e34a4ff29f0a19a7823512f58,\n            0x288b6897929b54c3b26a5faa07c00f,\n            0x4b5675fa13ab7444f1f047d3eb1bbe,\n            0x6ba0ac610ef9f267ab30fe25bb1c84,\n            0xa386b48ee03168d5cea3ecb9dc901f,\n            0xacf1a01f7dba44e050c976142fb1f6,\n            0x97a63b5cb7efc60d3502946aec63cf,\n            0x12cc1d5cab10a1e9e2398d29b9e3ef,\n            0x4635cf25c66e76bba8034df46204fb,\n            0x146f,\n        ],\n    );\n\n    let signature: RuntimeBigNum<18, 2048> = RuntimeBigNum {\n        params,\n        limbs: [\n            0xad29e07d16a278de49a371b9760a27,\n            0x86311920cc0e17a3c20cdff4c56dbb,\n            0x863556c6c5247dd83668dd825716ae,\n            0xc247c960945f4485b46c33b87425ca,\n            0x7326463c5c4cd5b08e21b938d9ed9a,\n            0x4f89fe0c82da08a0259eddb34d0da1,\n            0x43a74e76d4e1bd2666f1591889af0d,\n            0x240f7b80f0ff29f4253ee3019f832d,\n            0xc6edd131fbaaf725fd423dac52b362,\n            0x85f9732679242163e8afff44f6104d,\n            0xd3c3bbcb1757013fd6fb80f31dd9a6,\n            0x9008633f15df440e6df6d21ee585a2,\n            0x324df3425ed256e283be5b6b761741,\n            0xc60c1302929bd0e07caa4aeff4e8fd,\n            0x600d804ff13ba8d0e1bc9508714212,\n            0x50f7e75e5751d7edd61167027926be,\n            0x0db41d39442023e1420a8a84fe81d9,\n            0xab,\n        ],\n    };\n    assert(verify_sha256_pkcs1v15(sha256_hash, signature, 65537));\n}\n\n#[test]\nfn test_verify_sha256_pkcs1v15_2048_exponent_3() {\n    // Output of `cargo run -- --msg \"hello world\" -e 3` in the `signature_gen` directory\n    let sha256_hash: [u8; 32] = dep::std::hash::sha256(\"hello world\".as_bytes());\n    assert(\n        sha256_hash\n            == [\n                185, 77, 39, 185, 147, 77, 62, 8, 165, 46, 82, 215, 218, 125, 171, 250, 196, 132,\n                239, 227, 122, 83, 128, 238, 144, 136, 247, 172, 226, 239, 205, 233,\n            ],\n    );\n\n    let params: BigNumParams<18, 2048> = BigNumParams::new(\n        false,\n        [\n            0xe40ee47801326543c8e84b85d567c1,\n            0x5b54ea87f0ce29de1995697b0696fd,\n            0x457078f8fdce68b437cac0970b2452,\n            0x473ec776fee3731b6ab06e35875ddc,\n            0x62dedd594e5f12c80c3ccb5791a6cd,\n            0xecb934b9d8272c5e3a418145345499,\n            0xd1af643b3d785470ed0c6cd633f706,\n            0xb58a57b9e96eccbdfc7c17f0333d4,\n            0x2ebd34b5039fc596504927c282c60d,\n            0x3a44928a74f25fc1043bb37ce4dfa8,\n            0x91448459f9617fac33a2816162ac9e,\n            0x70cb910d9f3e1a78864640ec6c8240,\n            0x9aed33f6b31f1c9de67248a98c180,\n            0x7f1416e032c79488c94b311e87bd9c,\n            0x7191b4ebb1b3fffa949fa48ed01e5,\n            0x350a75cbaeca6bfdd71ca83cdbcae9,\n            0xfb1d274fa207457c6814d42c09f9cf,\n            0xd4,\n        ],\n        [\n            0x803bf4d38110a7d37fdd05f590dee9,\n            0xa68d317c933f37cab5ab4e7c00a3b9,\n            0x476a05a536bf5f2aa1b8850146cba7,\n            0xca297ea8b5528d91d4836ff27c30ab,\n            0x75cf2eaab76eefa12bbd570f1aea9f,\n            0x8f6a8ab877d9c5bcd98c37bdc5c2d3,\n            0xd497db1f6ebe83decacaa647fabea6,\n            0x686b27ca330e25e7a7cf197f6433ef,\n            0xfde04d2225c8308b07580af0058a0f,\n            0xa29fb69777c0e916976243b2b09855,\n            0xf983592285852e7e1c2cb3ae968323,\n            0x673608017f9f5acf67a01b73728d70,\n            0xeeff82521c0bc432a05f4b7444fac0,\n            0x85a89c4d229f60aaa3aa7ac7dac1e2,\n            0xcfecff93bc9fbfe0d6dff6091f2db8,\n            0xf20f047dcb224b4447bd098c07f8c2,\n            0x554bb53cadeb3eaab911a189f90227,\n            0x133b,\n        ],\n    );\n\n    let signature: RuntimeBigNum<18, 2048> = RuntimeBigNum {\n        params,\n        limbs: [\n            0xa250eff812c63eaaeaa3f04641c05f,\n            0xecc09613cb8b289c1f37c8f92e6a05,\n            0x2c0a0510058360c07af65d46f594fd,\n            0x943d67513363d3de430c94a1dafe7c,\n            0x511ec8e9b10bc6c6ff0d6c232ccf92,\n            0x50ffd07b3c093b3f5fc027de847731,\n            0xc268e1489449943fdafdf89ff168c3,\n            0x0b8b7f9f49b492f78fda58d252f23a,\n            0x491c6c4ef836a6a8730b7bf81e865e,\n            0x8746c75fb079d014e419543f56d7f0,\n            0x65804c417d6168a8bc0025d255cebf,\n            0xf695e91b77890b8e3fd775fa56e627,\n            0x5e90001c0218550f4083ae28025a2f,\n            0x526bd4eff34f25f62a698f0470e0a6,\n            0x7f224306a7d9daf536b1559434c6c6,\n            0x88809f16fe1fcea3c87511d9319735,\n            0x7694685fee0bfab4a9196b92ec6f2e,\n            0xa7,\n        ],\n    };\n\n    assert(verify_sha256_pkcs1v15(sha256_hash, signature, 3));\n}\n", "path": "/Users/saleel/nargo/github.com/noir-lang/noir_rsav0.4.0/lib/src/rsa.nr" } }, "names": ["main"], "brillig_names": ["build_msg_block", "attach_len_to_msg_block", "split_60_bits", "__mul", "__compute_quadratic_expression_with_borrow_flags", "directive_integer_quotient", "directive_invert"] }
